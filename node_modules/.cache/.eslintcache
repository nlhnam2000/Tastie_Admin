[{"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/index.js":"1","/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/routes/index.js":"2","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/index.js":"3","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/serviceWorker.js":"4","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/App.js":"5","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/index.js":"6","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/actions.js":"7","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/reducer.js":"8","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/NavigationScroll.js":"9","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/index.js":"10","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/index.js":"11","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/customizationReducer.js":"12","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/typography.js":"13","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/AuthenticationRoutes.js":"14","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/palette.js":"15","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/MainRoutes.js":"16","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/compStyleOverride.js":"17","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/config.js":"18","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/EcouponList.js":"19","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/AddEcoupon.js":"20","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/ProviderRequest.js":"21","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/authentication3/Login3.js":"22","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/authentication3/Register3.js":"23","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/sample-page/index.js":"24","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/AuthCardWrapper.js":"25","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/AuthWrapper1.js":"26","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/auth-forms/AuthRegister.js":"27","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/auth-forms/AuthLogin.js":"28","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/constant.js":"29","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/assets/columns/gridData.js":"30","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/SubCard.js":"31","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/AuthFooter.js":"32","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/CardSecondaryAction.js":"33","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/MainCard.js":"34","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Logo.js":"35","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Avatar.js":"36","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/AnimateButton.js":"37","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/hooks/useScriptRef.js":"38","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/utils/password-strength.js":"39","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/ProviderList.js":"40","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/Color.js":"41","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/UserList.js":"42","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Loadable.js":"43","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/index.js":"44","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MinimalLayout/index.js":"45","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/index.js":"46","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Loader.js":"47","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/EarningCard.js":"48","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TopSaleCard.js":"49","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalOrderLineChartCard.js":"50","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/PopularCard.js":"51","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalIncomeDarkCard.js":"52","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalIncomeLightCard.js":"53","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalGrowthBarChart.js":"54","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Breadcrumbs.js":"55","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/index.js":"56","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/Customization/index.js":"57","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/index.js":"58","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-growth-bar-chart.js":"59","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-order-month-line-chart.js":"60","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-order-year-line-chart.js":"61","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/BajajAreaChartCard.js":"62","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/index.js":"63","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/TotalGrowthBarChart.js":"64","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/TotalIncomeCard.js":"65","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/PopularCard.js":"66","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/EarningCard.js":"67","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/dashboard.js":"68","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/bajaj-area-chart.js":"69","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/pages.js":"70","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/utilities.js":"71","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/other.js":"72","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/ProfileSection/index.js":"73","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/index.js":"74","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/index.js":"75","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/SearchSection/index.js":"76","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuCard/index.js":"77","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/LogoSection/index.js":"78","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/ProfileSection/UpgradePlanCard.js":"79","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/NotificationList.js":"80","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavGroup/index.js":"81","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Transitions.js":"82","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavItem/index.js":"83","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js":"84"},{"size":840,"mtime":1645105468579,"results":"85","hashOfConfig":"86"},{"size":404,"mtime":1652453617797,"results":"87","hashOfConfig":"86"},{"size":840,"mtime":1645105468579,"results":"88","hashOfConfig":"89"},{"size":5911,"mtime":1645105468590,"results":"90","hashOfConfig":"89"},{"size":1780,"mtime":1652953887025,"results":"91","hashOfConfig":"89"},{"size":264,"mtime":1645105468591,"results":"92","hashOfConfig":"89"},{"size":670,"mtime":1653297215202,"results":"93","hashOfConfig":"89"},{"size":324,"mtime":1645105468591,"results":"94","hashOfConfig":"89"},{"size":644,"mtime":1645105468587,"results":"95","hashOfConfig":"89"},{"size":1545,"mtime":1645105468592,"results":"96","hashOfConfig":"89"},{"size":404,"mtime":1652453617797,"results":"97","hashOfConfig":"89"},{"size":2994,"mtime":1653298251951,"results":"98","hashOfConfig":"89"},{"size":3590,"mtime":1645105468592,"results":"99","hashOfConfig":"89"},{"size":853,"mtime":1645105468589,"results":"100","hashOfConfig":"89"},{"size":2395,"mtime":1645105468592,"results":"101","hashOfConfig":"89"},{"size":2052,"mtime":1653354943759,"results":"102","hashOfConfig":"89"},{"size":5879,"mtime":1645105468592,"results":"103","hashOfConfig":"89"},{"size":442,"mtime":1653613865737,"results":"104","hashOfConfig":"89"},{"size":8702,"mtime":1653646323652,"results":"105","hashOfConfig":"89"},{"size":13308,"mtime":1653304106585,"results":"106","hashOfConfig":"89"},{"size":10077,"mtime":1653788899026,"results":"107","hashOfConfig":"89"},{"size":5130,"mtime":1652950332319,"results":"108","hashOfConfig":"89"},{"size":4825,"mtime":1645105468604,"results":"109","hashOfConfig":"89"},{"size":4425,"mtime":1652454429900,"results":"110","hashOfConfig":"89"},{"size":800,"mtime":1645105468602,"results":"111","hashOfConfig":"89"},{"size":333,"mtime":1645105468603,"results":"112","hashOfConfig":"89"},{"size":13873,"mtime":1645105468603,"results":"113","hashOfConfig":"89"},{"size":12571,"mtime":1652952607581,"results":"114","hashOfConfig":"89"},{"size":119,"mtime":1645105468590,"results":"115","hashOfConfig":"89"},{"size":6191,"mtime":1653790755624,"results":"116","hashOfConfig":"89"},{"size":2244,"mtime":1645105468596,"results":"117","hashOfConfig":"89"},{"size":680,"mtime":1645105468594,"results":"118","hashOfConfig":"89"},{"size":2684,"mtime":1645105468594,"results":"119","hashOfConfig":"89"},{"size":2558,"mtime":1645105468594,"results":"120","hashOfConfig":"89"},{"size":5892,"mtime":1645105468593,"results":"121","hashOfConfig":"89"},{"size":2091,"mtime":1645105468597,"results":"122","hashOfConfig":"89"},{"size":2909,"mtime":1645105468597,"results":"123","hashOfConfig":"89"},{"size":384,"mtime":1645105468579,"results":"124","hashOfConfig":"89"},{"size":1287,"mtime":1645105468598,"results":"125","hashOfConfig":"89"},{"size":5683,"mtime":1653790716474,"results":"126","hashOfConfig":"89"},{"size":11911,"mtime":1645105468605,"results":"127","hashOfConfig":"89"},{"size":15893,"mtime":1653790363121,"results":"128","hashOfConfig":"89"},{"size":378,"mtime":1645105468593,"results":"129","hashOfConfig":"89"},{"size":3960,"mtime":1653750186335,"results":"130","hashOfConfig":"89"},{"size":337,"mtime":1645105468587,"results":"131","hashOfConfig":"89"},{"size":3161,"mtime":1652168462400,"results":"132","hashOfConfig":"89"},{"size":493,"mtime":1645105468593,"results":"133","hashOfConfig":"89"},{"size":12334,"mtime":1652454819325,"results":"134","hashOfConfig":"89"},{"size":12926,"mtime":1652791017580,"results":"135","hashOfConfig":"89"},{"size":11561,"mtime":1652454401191,"results":"136","hashOfConfig":"89"},{"size":27719,"mtime":1652790996658,"results":"137","hashOfConfig":"89"},{"size":3827,"mtime":1645105468600,"results":"138","hashOfConfig":"89"},{"size":13556,"mtime":1652454369091,"results":"139","hashOfConfig":"89"},{"size":10222,"mtime":1652454334759,"results":"140","hashOfConfig":"89"},{"size":7088,"mtime":1652453762930,"results":"141","hashOfConfig":"89"},{"size":2952,"mtime":1653750083078,"results":"142","hashOfConfig":"89"},{"size":8909,"mtime":1645105468580,"results":"143","hashOfConfig":"89"},{"size":2528,"mtime":1645105468583,"results":"144","hashOfConfig":"89"},{"size":2251,"mtime":1652169735941,"results":"145","hashOfConfig":"89"},{"size":1104,"mtime":1645105468601,"results":"146","hashOfConfig":"89"},{"size":1103,"mtime":1645105468602,"results":"147","hashOfConfig":"89"},{"size":2326,"mtime":1651654612469,"results":"148","hashOfConfig":"89"},{"size":372,"mtime":1653750236681,"results":"149","hashOfConfig":"89"},{"size":1533,"mtime":1645105468596,"results":"150","hashOfConfig":"89"},{"size":860,"mtime":1645105468596,"results":"151","hashOfConfig":"89"},{"size":8263,"mtime":1645105468595,"results":"152","hashOfConfig":"89"},{"size":1154,"mtime":1645105468595,"results":"153","hashOfConfig":"89"},{"size":573,"mtime":1645105468588,"results":"154","hashOfConfig":"89"},{"size":884,"mtime":1645105468601,"results":"155","hashOfConfig":"89"},{"size":1033,"mtime":1645105468588,"results":"156","hashOfConfig":"89"},{"size":2373,"mtime":1653354063149,"results":"157","hashOfConfig":"89"},{"size":864,"mtime":1645105468588,"results":"158","hashOfConfig":"89"},{"size":16651,"mtime":1652954369152,"results":"159","hashOfConfig":"89"},{"size":9535,"mtime":1645105468581,"results":"160","hashOfConfig":"89"},{"size":768,"mtime":1645105468586,"results":"161","hashOfConfig":"89"},{"size":8001,"mtime":1645105468582,"results":"162","hashOfConfig":"89"},{"size":4188,"mtime":1653749820076,"results":"163","hashOfConfig":"89"},{"size":593,"mtime":1652453769958,"results":"164","hashOfConfig":"89"},{"size":2188,"mtime":1645105468582,"results":"165","hashOfConfig":"89"},{"size":11879,"mtime":1645105468581,"results":"166","hashOfConfig":"89"},{"size":1949,"mtime":1645105468585,"results":"167","hashOfConfig":"89"},{"size":3101,"mtime":1645105468597,"results":"168","hashOfConfig":"89"},{"size":4114,"mtime":1652453775576,"results":"169","hashOfConfig":"89"},{"size":4566,"mtime":1645105468584,"results":"170","hashOfConfig":"89"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"fhe5in",{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"fymrre",{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"178"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"178"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"178"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"178"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"178"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"178"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"178"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"178"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"178"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"178"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"178"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"178"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"178"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"178"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"178"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"178"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"178"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"178"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/index.js",[],["359","360","361","362","363"],"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/routes/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/index.js",[],["364","365","366","367","368"],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/serviceWorker.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/App.js",["369"],"import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { CssBaseline, StyledEngineProvider } from '@mui/material';\r\n\r\n// routing\r\nimport Routes from 'routes';\r\n\r\n// defaultTheme\r\nimport themes from 'themes';\r\n\r\n// project imports\r\nimport NavigationScroll from 'layout/NavigationScroll';\r\nimport { RETRIEVE_ACCOUNT } from 'store/actions';\r\n\r\n// ==============================|| APP ||============================== //\r\n\r\nconst App = () => {\r\n    const customization = useSelector((state) => state.customization);\r\n    const navigate = useNavigate();\r\n    const dispacth = useDispatch();\r\n\r\n    const retrieveAccount = () => {\r\n        const auth = localStorage.getItem('@authentication');\r\n\r\n        if (auth) {\r\n            const data = JSON.parse(auth);\r\n            dispacth({ type: RETRIEVE_ACCOUNT, account: { name: 'Admin', email: data.email, isAuth: true } });\r\n        } else {\r\n            dispacth({ type: RETRIEVE_ACCOUNT, account: { name: null, email: null, isAuth: false } });\r\n            navigate('/free/pages/login/login3');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // retrieveAccount();\r\n        // if (!customization.account.isAuth) {\r\n        //     navigate('/free/pages/login/login3');\r\n        // }\r\n        retrieveAccount();\r\n    }, []);\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={themes(customization)}>\r\n                <CssBaseline />\r\n                <NavigationScroll>\r\n                    <Routes />\r\n                </NavigationScroll>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/actions.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/reducer.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/NavigationScroll.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/customizationReducer.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/typography.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/AuthenticationRoutes.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/palette.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/routes/MainRoutes.js",["370"],"import { lazy } from 'react';\r\n\r\n// project imports\r\nimport MainLayout from 'layout/MainLayout';\r\nimport Loadable from 'ui-component/Loadable';\r\n\r\n// dashboard routing\r\nconst DashboardDefault = Loadable(lazy(() => import('views/dashboard/Default')));\r\n\r\n// utilities routing\r\nconst UtilsTypography = Loadable(lazy(() => import('views/utilities/UserList')));\r\nconst UtilsColor = Loadable(lazy(() => import('views/utilities/Color')));\r\nconst UtilsShadow = Loadable(lazy(() => import('views/utilities/ProviderList')));\r\nconst ProviderRequest = Loadable(lazy(() => import('views/utilities/ProviderRequest')));\r\nconst UtilsMaterialIcons = Loadable(lazy(() => import('views/utilities/AddEcoupon')));\r\nconst UtilsTablerIcons = Loadable(lazy(() => import('views/utilities/EcouponList')));\r\n\r\n// sample page routing\r\nconst SamplePage = Loadable(lazy(() => import('views/sample-page')));\r\n\r\n// ==============================|| MAIN ROUTING ||============================== //\r\n\r\nconst MainRoutes = {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n        {\r\n            path: '/',\r\n            element: <DashboardDefault />\r\n        },\r\n        {\r\n            path: '/dashboard/default',\r\n            element: <DashboardDefault />\r\n        },\r\n        {\r\n            path: '/utils/util-typography',\r\n            element: <UtilsTypography />\r\n        },\r\n        // {\r\n        //     path: '/utils/util-color',\r\n        //     element: <UtilsColor />\r\n        // },\r\n        {\r\n            path: '/provider/provider-list',\r\n            element: <UtilsShadow />\r\n        },\r\n        {\r\n            path: '/provider/provider-request',\r\n            element: <ProviderRequest />\r\n        },\r\n        {\r\n            path: '/ecoupons/ecoupon-list',\r\n            element: <UtilsTablerIcons />\r\n        },\r\n        {\r\n            path: '/ecoupons/add-ecoupon',\r\n            element: <UtilsMaterialIcons />\r\n        },\r\n        {\r\n            path: '/sample-page',\r\n            element: <SamplePage />\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MainRoutes;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/themes/compStyleOverride.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/config.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/EcouponList.js",["371","372","373","374","375","376","377","378","379","380","381","382"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, Dialog, DialogActions, DialogContentText, DialogTitle, DialogContent, Button, Modal, Box, Typography } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { ecouponColumns, providerByEcouponColumns } from 'assets/columns/gridData';\r\nimport { HOST_NAME } from 'config';\r\nimport { CONNECT_SOCKET, DISCONNECT_SOCKET } from 'store/actions';\r\n\r\n// assets\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// styles\r\nconst IFrameWrapper = styled('iframe')(({ theme }) => ({\r\n    height: 'calc(100vh - 210px)',\r\n    border: '1px solid',\r\n    borderColor: theme.palette.primary.light\r\n}));\r\n\r\n// =============================|| TABLER ICONS ||============================= //\r\n\r\nconst EcouponList = () => {\r\n    const [rows, setRows] = useState([]);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [formData, setFormData] = useState({});\r\n    const [providerList, setProviderList] = useState([]);\r\n    const [openProviderList, setOpenProviderList] = useState(false);\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '150vh',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        height: '80vh',\r\n        overflowY: 'scroll'\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const d = new Date(date);\r\n        let month = (d.getMonth() + 1).toString();\r\n        let day = d.getDate().toString();\r\n        const year = d.getFullYear();\r\n\r\n        if (month.length < 2) month = `0${month}`;\r\n        if (day.length < 2) day = `0${day}`;\r\n\r\n        return [year, month, day].join('-'); // 2022-05-04\r\n    };\r\n\r\n    const openProviderListByEcoupon = async (ecouponId) => {\r\n        try {\r\n            const res = await axios.post(`http://${HOST_NAME}:3007/v1/api/tastie/home/get-list-provider-by-ecoupon`, {\r\n                ecoupon_id: ecouponId,\r\n                longitude: '106.7002387',\r\n                latitude: '10.7652217',\r\n                limit: 100,\r\n                offset: 1\r\n            });\r\n            setProviderList(res.data.response);\r\n            setOpenProviderList(true);\r\n        } catch (error) {\r\n            console.error('Cannot get provider list', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (providerList.length > 0) {\r\n            console.log(providerList);\r\n        }\r\n    }, [providerList]);\r\n\r\n    const handleClose = () => {\r\n        setOpenProviderList(false);\r\n    };\r\n\r\n    // const socket = io(`http://${HOST_NAME}:3015`);\r\n\r\n    const GetAllEcoupon = async (offset, limit) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const res = await axios.post(\r\n                `http://${HOST_NAME}:3010/v1/api/tastie/admin/get-all-ecoupon`,\r\n                {\r\n                    limit,\r\n                    offset\r\n                },\r\n                config\r\n            );\r\n\r\n            if (res.data.status) {\r\n                const clone = [...res.data.response];\r\n                setRows(\r\n                    clone.map((item) => ({\r\n                        ...item,\r\n                        // update_at: new Date(item.update_at).toLocaleString('vi-VI'),\r\n                        // start_date: new Date(item.start_date).toLocaleString('vi-VI'),\r\n                        // expire_date: new Date(item.expire_date).toLocaleString('vi-VI')\r\n                        update_at: formatDate(item.update_at),\r\n                        start_date: formatDate(item.start_date),\r\n                        expire_date: formatDate(item.expire_date)\r\n                    }))\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot get all ecoupons', error);\r\n        }\r\n    };\r\n\r\n    const handleUpdateRow = async (formData) => {\r\n        try {\r\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/update-ecoupon`, formData);\r\n            if (res.data.status) {\r\n                await GetAllEcoupon(1, 50);\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot update ecoupon', error);\r\n        } finally {\r\n            setOpenModal(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // socket.emit('admin', 'hello from admin');\r\n        GetAllEcoupon(1, 50);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(formData);\r\n    }, [formData]);\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Ecoupon List\"\r\n            // secondary={\r\n            //     <Button variant=\"contained\" onClick={() => addCoupon()}>\r\n            //         SOCKET\r\n            //     </Button>\r\n            // }\r\n        >\r\n            {/* <Card sx={{ overflow: 'hidden' }}>\r\n            <IFrameWrapper title=\"Tabler Icons\" width=\"100%\" src=\"https://tablericons.com/\" />\r\n        </Card> */}\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={ecouponColumns}\r\n                pageSize={50}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                getRowId={(row) => row.ecoupon_id}\r\n                sx={{ width: '100%', height: '70vh' }}\r\n                // onPageChange={(page) => alert(page)}\r\n                onCellEditCommit={(event) => {\r\n                    const rowEdited = rows.find((row) => row.ecoupon_id === event.id);\r\n                    setFormData((prev) => ({\r\n                        ...prev,\r\n                        ...rowEdited,\r\n                        start_date: formatDate(rowEdited.start_date),\r\n                        expire_date: formatDate(rowEdited.expire_date),\r\n                        update_at: formatDate(rowEdited.update_at),\r\n                        [event.field]: event.value\r\n                    }));\r\n                    setOpenModal(true);\r\n                    // const formData = {\r\n                    //     ...rowEdited,\r\n                    //     [event.field]: event.value\r\n                    // };\r\n                    // console.log(formData);\r\n                    // handleUpdateRow(formData);\r\n                }}\r\n                onRowClick={(params, event, details) => {\r\n                    console.log(params);\r\n                    openProviderListByEcoupon(params.row.ecoupon_id);\r\n                }}\r\n            />\r\n            <div>\r\n                <Dialog\r\n                    open={openModal}\r\n                    onClose={() => setOpenModal(false)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">Are you sure to apply the changes ?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            This action will change the original record. Would you like to apply change ?\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpenModal(false)}>Cancel</Button>\r\n                        <Button onClick={() => handleUpdateRow(formData)} autoFocus>\r\n                            Apply\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n            <Modal\r\n                open={openProviderList}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"heading\" component=\"h2\">\r\n                        List of applied providers\r\n                    </Typography>\r\n                    <DataGrid\r\n                        columns={providerByEcouponColumns}\r\n                        rows={providerList}\r\n                        getRowId={(row) => row.provider_id}\r\n                        sx={{ mt: 2 }}\r\n                        checkboxSelection\r\n                    />\r\n                </Box>\r\n            </Modal>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default EcouponList;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/AddEcoupon.js",["383","384","385","386","387","388"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, FormControl, FormGroup, InputLabel, FormHelperText, Input, Button } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { HOST_NAME } from 'config';\r\nimport { CONNECT_SOCKET, DISCONNECT_SOCKET } from 'store/actions';\r\n\r\n// library\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// styles\r\nconst IFrameWrapper = styled('iframe')(({ theme }) => ({\r\n    height: 'calc(100vh - 210px)',\r\n    border: '1px solid',\r\n    borderColor: theme.palette.primary.light\r\n}));\r\n\r\n// ============================|| MATERIAL ICONS ||============================ //\r\n\r\nconst AddEcoupon = () => {\r\n    const [formData, setFormData] = useState({\r\n        ecoupon_code: null,\r\n        ecoupon_name: null,\r\n        ecoupon_value: null,\r\n        ecoupon_description: null,\r\n        min_order_value: null,\r\n        max_discount_value: null,\r\n        start_date: null,\r\n        expire_date: null,\r\n        payment_method_id: null,\r\n        limited_offer: null,\r\n        weekly_usage_limit_per_user: null,\r\n        delivery_mode: null\r\n    });\r\n    const dispacth = useDispatch();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    useEffect(() => {\r\n        dispacth({\r\n            type: CONNECT_SOCKET\r\n        });\r\n\r\n        return () => {\r\n            dispacth({\r\n                type: DISCONNECT_SOCKET\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    const handleAddEcoupon = async (formData) => {\r\n        try {\r\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/add-ecoupon`, formData);\r\n\r\n            if (res.data.status) {\r\n                alert('Success');\r\n                // window.location.href('/ecoupons/ecoupon-list');\r\n                customization.socket.emit('admin-add-ecoupon');\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot add an ecoupon', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"Add an Ecoupon\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/material-icons/\" />}>\r\n            <FormControl sx={{ width: '100%' }}>\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around'\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"ecoupon_code\">Ecoupon Code</InputLabel>\r\n                        <Input\r\n                            id=\"ecoupon_code\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: event.target.value\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"ecoupon_name\">Ecoupon Name</InputLabel>\r\n                        <Input\r\n                            id=\"ecoupon_name\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: event.target.value\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around',\r\n                        marginTop: 5\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"ecoupon_value\">Ecoupon value</InputLabel>\r\n                        <Input\r\n                            id=\"ecoupon_value\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"ecoupon_description\">Ecoupon description</InputLabel>\r\n                        <Input\r\n                            id=\"ecoupon_description\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: event.target.value\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around',\r\n                        marginTop: 5\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"min_order_value\">Min order value</InputLabel>\r\n                        <Input\r\n                            id=\"min_order_value\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"max_discount_value\">Max discount value</InputLabel>\r\n                        <Input\r\n                            id=\"max_discount_value\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around',\r\n                        marginTop: 5\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"start_date\">Start date</InputLabel>\r\n                        <Input\r\n                            id=\"start_date\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: event.target.value\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"expire_date\">Expire date</InputLabel>\r\n                        <Input\r\n                            id=\"expire_date\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: event.target.value\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around',\r\n                        marginTop: 5\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"payment_method_id\">Payment method ID</InputLabel>\r\n                        <Input\r\n                            id=\"payment_method_id\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"limited_offer\">Limited offer</InputLabel>\r\n                        <Input\r\n                            id=\"limited_offer\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                    sx={{\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-around',\r\n                        marginTop: 5\r\n                    }}\r\n                    row\r\n                >\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"weekly_usage_limit_per_user\">weekly usage limit per user</InputLabel>\r\n                        <Input\r\n                            id=\"weekly_usage_limit_per_user\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{ width: '40%' }}>\r\n                        <InputLabel htmlFor=\"delivery_mode\">Delivery mode</InputLabel>\r\n                        <Input\r\n                            id=\"delivery_mode\"\r\n                            aria-describedby=\"my-helper-text\"\r\n                            onChange={(event) =>\r\n                                setFormData((prev) => ({\r\n                                    ...prev,\r\n                                    [event.target.id]: parseFloat(event.target.value)\r\n                                }))\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    sx={{ margin: 'auto', marginTop: 10 }}\r\n                    onClick={(event) => {\r\n                        event.preventDefault();\r\n                        handleAddEcoupon(formData);\r\n                    }}\r\n                >\r\n                    Add Ecoupon\r\n                </Button>\r\n            </FormControl>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AddEcoupon;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/ProviderRequest.js",["389","390","391","392","393","394","395","396","397","398","399"],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/authentication3/Login3.js",["400","401","402","403","404","405","406"],"import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\nimport axios from 'axios';\r\n\r\n// assets\r\nimport { HOST_NAME } from 'config';\r\nimport { SIGN_IN } from 'store/actions';\r\n\r\n// ================================|| AUTH3 - LOGIN ||================================ //\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 2 }}>\r\n                                        <Link to=\"#\">\r\n                                            {/* <Logo /> */}\r\n                                            <Typography variant=\"h1\">Tastie</Typography>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    {/* <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/pages/register/register3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Don&apos;t have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/authentication3/Register3.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/sample-page/index.js",["407","408","409","410","411"],"import React, { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Typography } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { HOST_NAME } from 'config';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst columns = [\r\n    { field: 'user_id', headerName: 'User ID', width: 100 },\r\n    { field: 'first_name', headerName: 'First Name', width: 100, editable: true },\r\n    { field: 'last_name', headerName: 'Last Name', width: 100, editable: true },\r\n    { field: 'gender', headerName: 'Gender', width: 100, editable: true },\r\n    { field: 'birthday', headerName: 'Birthday', width: 100, editable: true },\r\n    { field: 'email', headerName: 'Email', width: 100, editable: true },\r\n    { field: 'phone', headerName: 'Phone', width: 100, editable: true },\r\n    { field: 'password', headerName: 'Password', width: 100, editable: true },\r\n    { field: 'role', headerName: 'Role', width: 100, editable: true },\r\n    { field: 'user_token', headerName: 'User Token', width: 100, editable: true },\r\n    { field: 'register_at', headerName: 'Register at', width: 100, editable: true },\r\n    { field: 'update_at', headerName: 'Update at', width: 100, editable: true },\r\n    { field: 'delete_at', headerName: 'Delete at', width: 100, editable: true },\r\n    { field: 'avatar', headerName: 'Avatar', width: 100, editable: true }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        user_id: 1,\r\n        first_name: 'John',\r\n        last_name: 'Doe',\r\n        gender: 'Male',\r\n        birthday: '20/02/2000',\r\n        email: 'johndoe@gmail.com',\r\n        phone: 1234567890,\r\n        password: 'ioasudfhbiawuehfioawusdfcqwefq',\r\n        role: 3,\r\n        user_token: 'ajshkdfquiawyebgquiwyebgqu',\r\n        register_at: '20/02/2022',\r\n        update_at: null,\r\n        delete_at: null,\r\n        avatar: 'https://HOST_NAME:3000/avatar.png'\r\n    },\r\n    {\r\n        user_id: 2,\r\n        first_name: 'John',\r\n        last_name: 'Doe',\r\n        gender: 'Male',\r\n        birthday: '20/02/2000',\r\n        email: 'johndoe@gmail.com',\r\n        phone: 1234567890,\r\n        password: 'ioasudfhbiawuehfioawusdfcqwefq',\r\n        role: 3,\r\n        user_token: 'ajshkdfquiawyebgquiwyebgqu',\r\n        register_at: '20/02/2022',\r\n        update_at: null,\r\n        delete_at: null,\r\n        avatar: 'https://HOST_NAME:3000/avatar.png'\r\n    }\r\n];\r\n\r\nconst SamplePage = () => {\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const GetAllUser = async (offset, limit) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const res = await axios.post(\r\n                `http://${HOST_NAME}:3010/v1/api/tastie/admin/get-all-user`,\r\n                {\r\n                    limit,\r\n                    offset\r\n                },\r\n                config\r\n            );\r\n\r\n            if (res.data.status) {\r\n                setRows(res.data.response);\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot get all user', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        GetAllUser(1, 39130);\r\n    }, []);\r\n\r\n    return (\r\n        <MainCard title=\"User list\">\r\n            <Typography variant=\"body2\">\r\n                Lorem ipsum dolor sit amen, consenter nipissing eli, sed do elusion tempos incident ut laborers et doolie magna alissa. Ut\r\n                enif ad minim venice, quin nostrum exercitation illampu laborings nisi ut liquid ex ea commons construal. Duos aube grue\r\n                dolor in reprehended in voltage veil esse colum doolie eu fujian bulla parian. Exceptive sin ocean cuspidate non president,\r\n                sunk in culpa qui officiate descent molls anim id est labours.\r\n            </Typography>\r\n            {/* <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={50}\r\n                // rowsPerPageOptions={[40]}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                getRowId={(row) => row.user_id}\r\n                sx={{ width: '100%', height: 500 }}\r\n                // onPageChange={(page) => alert(page)}\r\n            /> */}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/AuthCardWrapper.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/AuthWrapper1.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/auth-forms/AuthRegister.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/pages/authentication/auth-forms/AuthLogin.js",["412","413","414","415","416","417","418","419","420"],"import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { HOST_NAME } from 'config';\r\nimport { SIGN_IN } from 'store/actions';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Login');\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    {/* <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton> */}\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid> */}\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'admin1@gmail.com',\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    // try {\r\n                    //     if (scriptedRef.current) {\r\n                    //         setStatus({ success: true });\r\n                    //         setSubmitting(false);\r\n                    //     }\r\n                    // } catch (err) {\r\n                    //     console.error(err);\r\n                    //     if (scriptedRef.current) {\r\n                    //         setStatus({ success: false });\r\n                    //         setErrors({ submit: err.message });\r\n                    //         setSubmitting(false);\r\n                    //     }\r\n                    // }\r\n                    try {\r\n                        const config = {\r\n                            headers: {\r\n                                'Access-Control-Allow-Origin': '*',\r\n                                'Content-Type': 'application/json'\r\n                            }\r\n                        };\r\n                        const res = await axios.post(\r\n                            `http://${HOST_NAME}:3010/v1/api/tastie/admin/sign-in`,\r\n                            {\r\n                                email: values.email,\r\n                                password: values.password\r\n                            },\r\n                            config\r\n                        );\r\n\r\n                        if (res.data.status) {\r\n                            const payload = {\r\n                                email: 'admin1@gmail.com',\r\n                                name: 'Admin',\r\n                                isAuth: true\r\n                            };\r\n                            dispatch({\r\n                                type: SIGN_IN,\r\n                                account: { ...payload }\r\n                            });\r\n                            localStorage.setItem('@authentication', JSON.stringify(payload));\r\n                            navigate('/free');\r\n                        }\r\n                    } catch (error) {\r\n                        console.error('Cannot sign in', error);\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/store/constant.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/assets/columns/gridData.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/SubCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/AuthFooter.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/CardSecondaryAction.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/MainCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Logo.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Avatar.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/AnimateButton.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/hooks/useScriptRef.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/utils/password-strength.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/ProviderList.js",["421","422","423","424","425","426","427","428"],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/Color.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/utilities/UserList.js",["429","430","431","432","433","434"],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Loadable.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MinimalLayout/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/index.js",["435"],"import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport EarningCard from './EarningCard';\r\nimport PopularCard from './PopularCard';\r\nimport TopSaleCard from './TopSaleCard';\r\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\r\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\r\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\r\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// libraries\r\nimport { useSelector } from 'react-redux';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log('current chart', customization.currentChart);\r\n    // }, [customization.currentChart]);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <EarningCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <TotalOrderLineChartCard isLoading={isLoading} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        {/* <Grid container spacing={gridSpacing}>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeDarkCard isLoading={isLoading} />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeLightCard isLoading={isLoading} />\r\n                            </Grid>\r\n                        </Grid> */}\r\n                        <TotalIncomeLightCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TotalGrowthBarChart isLoading={isLoading} type={customization.currentChart} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <PopularCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        {/* <TotalGrowthBarChart isLoading={isLoading} /> */}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <TopSaleCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/Loader.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/EarningCard.js",["436","437","438","439","440","441","442","443","444","445"],"import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography, Button } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\nimport { SHOW_CURRENT_CHART } from 'store/actions';\r\nimport { HOST_NAME } from '../../../config';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    },\r\n    cursor: 'pointer'\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n    const [timeValue, setTimeValue] = useState('Month');\r\n    const [isHigher, setIsHigher] = useState(true);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChangeTime = (event, newTimeValue) => {\r\n        event.stopPropagation();\r\n        setTimeValue(newTimeValue);\r\n    };\r\n\r\n    const GetTotalRevenue = async (startMonth, endMonth, year) => {\r\n        // try {\r\n        //     const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-total-revenue-by-time', {\r\n        //         start_month: startMonth,\r\n        //         end_month: endMonth,\r\n        //         year\r\n        //     });\r\n        //     if (res.data.status && res.data.response.length > 0) {\r\n        //         setTotalRevenue(res.data.response[0].total_revenue);\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.error(error);\r\n        // }\r\n        const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-total-revenue-by-time`, {\r\n            start_month: startMonth,\r\n            end_month: endMonth,\r\n            year\r\n        });\r\n\r\n        return res.data.response[0];\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1;\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        if (timeValue === 'Month') {\r\n            // GetTotalRevenue(currentMonth, currentMonth, currentYear);\r\n            const getPreviousMonth = GetTotalRevenue(currentMonth - 1, currentMonth - 1, currentYear);\r\n            const getCurrentMonth = GetTotalRevenue(currentMonth, currentMonth, currentYear);\r\n            Promise.all([getPreviousMonth, getCurrentMonth]).then((values) => {\r\n                setTotalRevenue(values[1].total_revenue);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        } else {\r\n            const getPreviousMonth = GetTotalRevenue(1, 12, currentYear);\r\n            const getCurrentMonth = GetTotalRevenue(1, 12, currentYear - 1);\r\n            Promise.all([getPreviousMonth, getCurrentMonth]).then((values) => {\r\n                setTotalRevenue(values[1].total_revenue);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        }\r\n    }, [timeValue]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false} onClick={() => dispatch({ type: SHOW_CURRENT_CHART, currentChart: 1 })}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.secondary[800],\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <img src={EarningIcon} alt=\"Notification\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.secondary.dark,\r\n                                                color: theme.palette.secondary[200],\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <Typography>This Month</Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem>\r\n                                                <Typography>This year</Typography>\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid> */}\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Month' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit', zIndex: 1 }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Month')}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Year' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit', zIndex: 1 }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Year')}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            ${totalRevenue.toFixed(2) ?? 0.0}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            {isHigher ? (\r\n                                                <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                            ) : (\r\n                                                <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                            )}\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.secondary[200]\r\n                                    }}\r\n                                >\r\n                                    Total Revenue\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TopSaleCard.js",["446","447","448"],"import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\nimport { HOST_NAME } from 'config';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\n// library\nimport axios from 'axios';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst TopSaleCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [ranking, setRanking] = useState([]);\n    const [differences, setDifferences] = useState([\n        {\n            state: 'Profit',\n            difference: 0\n        }\n    ]);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const sortByMonth = async () => {\n        try {\n            const currentMonth = new Date().getMonth() + 1;\n            const currentYear = new Date().getFullYear();\n\n            const getCurrentMonthRevenue = async () => {\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\n                    start_month: currentMonth,\n                    end_month: currentMonth,\n                    year: currentYear,\n                    limit: 5\n                });\n\n                return res.data.response;\n            };\n            const getPreviousMonthRevenue = async () => {\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\n                    start_month: currentMonth - 1,\n                    end_month: currentMonth - 1,\n                    year: currentYear,\n                    limit: 5\n                });\n\n                return res.data.response;\n            };\n            const res1 = getCurrentMonthRevenue();\n            const res2 = getPreviousMonthRevenue();\n\n            Promise.all([res1, res2]).then((values) => {\n                setRanking(values[0]);\n                if (values[1].length > 0) {\n                    setDifferences(\n                        values[0].map((value, index) => ({\n                            state: value.revenue > values[1][index].revenue ? 'Profit' : 'Loss',\n                            difference: Math.abs(value.revenue - values[1][index].revenue)\n                        }))\n                    );\n                } else {\n                    setDifferences(\n                        values[0].map((value, index) => ({\n                            state: 'Profit',\n                            difference: parseFloat(value.revenue.toFixed(2))\n                        }))\n                    );\n                }\n            });\n\n            // if (res.data.status) {\n            //     setRanking(res.data.response);\n            // }\n        } catch (error) {\n            console.error('Cannot sort by month', error);\n        } finally {\n            console.log(differences);\n        }\n    };\n\n    const sortByYear = async () => {\n        try {\n            const currentYear = new Date().getFullYear();\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\n                start_month: 1,\n                end_month: 12,\n                year: currentYear,\n                limit: 5\n            });\n            if (res.data.status) {\n                setRanking(res.data.response);\n            }\n        } catch (error) {\n            console.error('Cannot sort by month', error);\n        } finally {\n            setAnchorEl(null);\n        }\n    };\n\n    const LoadSaleRanking = async (startMonth, endMonth, year, limit) => {\n        try {\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-sales`, {\n                start_month: startMonth,\n                end_month: endMonth,\n                year,\n                limit\n            });\n            if (res.data.status) {\n                setRanking(res.data.response);\n            }\n        } catch (error) {\n            console.error('Cannot get top sale', error);\n        } finally {\n            setAnchorEl(null);\n        }\n    };\n\n    useEffect(() => {\n        LoadSaleRanking(3, 6, 2022, 5);\n        // sortByMonth();\n        // sortByYear();\n        return () => {\n            setRanking([]);\n        };\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Top Sale</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={() => sortByMonth()}> This Month</MenuItem>\n                                            <MenuItem onClick={() => sortByYear()}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard\n                                    merchantName={ranking.length > 0 ? ranking[0].merchant_name : 'Unknown'}\n                                    revenu={ranking.length > 0 ? ranking[0].num_sales : 0.0}\n                                    revenueList={[{ data: ranking.map((r) => r.num_sales) }]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                {ranking.map((item, index) => (\n                                    <div key={index}>\n                                        <Grid container direction=\"column\">\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\" sx={{ fontSize: 'small' }}>\n                                                            {index + 1}. {item.merchant_name ?? 'Unknown'}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                            <Grid item>\n                                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                                    {item.num_sales ?? 0} sales\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Avatar\n                                                                    variant=\"rounded\"\n                                                                    sx={{\n                                                                        width: 16,\n                                                                        height: 16,\n                                                                        borderRadius: '5px',\n                                                                        backgroundColor: theme.palette.success.light,\n                                                                        color: theme.palette.success.dark,\n                                                                        ml: 2\n                                                                    }}\n                                                                >\n                                                                    <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                                </Avatar>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography\n                                                    variant=\"subtitle2\"\n                                                    sx={{\n                                                        color:\n                                                            differences[index]?.state === 'Profit'\n                                                                ? 'success.dark'\n                                                                : theme.palette.orange.dark\n                                                    }}\n                                                >\n                                                    ${differences[index]?.difference} {differences[index]?.state}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Divider sx={{ my: 1.5 }} />\n                                    </div>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nTopSaleCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TopSaleCard;\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalOrderLineChartCard.js",["449","450","451","452"],"import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\nimport { HOST_NAME } from 'config';\r\n\r\n// assets\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SHOW_CURRENT_CHART } from 'store/actions';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    },\r\n    cursor: 'pointer'\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const [timeValue, setTimeValue] = useState('Month');\r\n    const [totalSale, setTotalSale] = useState(0);\r\n    const handleChangeTime = (event, newValue) => {\r\n        event.stopPropagation();\r\n        setTimeValue(newValue);\r\n    };\r\n    const [isHigher, setIsHigher] = useState(true);\r\n\r\n    const GetTotalSale = async (startMonth, endMonth, year) => {\r\n        // try {\r\n        //     const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-number-order-by-time', {\r\n        //         start_month: startMonth,\r\n        //         end_month: endMonth,\r\n        //         year\r\n        //     });\r\n\r\n        //     if (res.data.status && res.data.response.length > 0) {\r\n        //         setTotalSale(res.data.response[0].total_num_orders);\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.error(error);\r\n        // }\r\n        const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-number-order-by-time`, {\r\n            start_month: startMonth,\r\n            end_month: endMonth,\r\n            year\r\n        });\r\n        return res.data.response[0];\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1;\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        if (timeValue === 'Month') {\r\n            const getPreviousMonth = GetTotalSale(currentMonth - 1, currentMonth - 1, currentYear);\r\n            const getCurrentMonth = GetTotalSale(currentMonth, currentMonth, currentYear);\r\n            Promise.all([getPreviousMonth, getCurrentMonth]).then((values) => {\r\n                setTotalSale(values[1].total_num_orders);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        } else {\r\n            const getPreviousYear = GetTotalSale(1, 12, currentYear - 1);\r\n            const getCurrentYear = GetTotalSale(1, 12, currentYear);\r\n            Promise.all([getPreviousYear, getCurrentYear]).then((values) => {\r\n                setTotalSale(values[1].total_num_orders);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        }\r\n    }, [timeValue]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper\r\n                    border={false}\r\n                    content={false}\r\n                    onClick={() => {\r\n                        dispatch({ type: SHOW_CURRENT_CHART, currentChart: 2 });\r\n                    }}\r\n                >\r\n                    <Box sx={{ p: 1.25, px: 2 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <LocalMallOutlinedIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Month' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Month')}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Year' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Year')}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                    ${totalSale.toFixed(2)}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    {isHigher ? (\r\n                                                        <ArrowUpwardIcon\r\n                                                            fontSize=\"inherit\"\r\n                                                            sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }}\r\n                                                        />\r\n                                                    ) : (\r\n                                                        <ArrowDownwardIcon\r\n                                                            fontSize=\"inherit\"\r\n                                                            sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Avatar>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color: theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Total Sales\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        {/* {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />} */}\r\n                                        {/* <Button\r\n                                            size=\"large\"\r\n                                            variant=\"contained\"\r\n                                            disableElevation\r\n                                            onClick={() => {\r\n                                                dispatch({ type: SHOW_CURRENT_CHART, currentChart: 2 });\r\n                                            }}\r\n                                            sx={{ float: 'right', marginTop: 5 }}\r\n                                        >\r\n                                            View in chart\r\n                                        </Button> */}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/PopularCard.js",["453","454","455"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport BajajAreaChartCard from './BajajAreaChartCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { HOST_NAME } from '../../../config';\r\n\r\n// assets\r\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\r\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\r\n\r\n// library\r\nimport axios from 'axios';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [ranking, setRanking] = useState([]);\r\n    const [differences, setDifferences] = useState([\r\n        {\r\n            state: 'Profit',\r\n            difference: 0\r\n        }\r\n    ]);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const sortByMonth = async () => {\r\n        try {\r\n            const currentMonth = new Date().getMonth() + 1;\r\n            const currentYear = new Date().getFullYear();\r\n\r\n            const getCurrentMonthRevenue = async () => {\r\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\r\n                    start_month: currentMonth,\r\n                    end_month: currentMonth,\r\n                    year: currentYear,\r\n                    limit: 5\r\n                });\r\n\r\n                return res.data.response;\r\n            };\r\n            const getPreviousMonthRevenue = async () => {\r\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\r\n                    start_month: currentMonth - 1,\r\n                    end_month: currentMonth - 1,\r\n                    year: currentYear,\r\n                    limit: 5\r\n                });\r\n\r\n                return res.data.response;\r\n            };\r\n            const res1 = getCurrentMonthRevenue();\r\n            const res2 = getPreviousMonthRevenue();\r\n\r\n            Promise.all([res1, res2]).then((values) => {\r\n                setRanking(values[0]);\r\n                if (values[1].length > 0) {\r\n                    setDifferences(\r\n                        values[0].map((value, index) => ({\r\n                            state: value.revenue > values[1][index].revenue ? 'Profit' : 'Loss',\r\n                            difference: Math.abs(value.revenue - values[1][index].revenue)\r\n                        }))\r\n                    );\r\n                } else {\r\n                    setDifferences(\r\n                        values[0].map((value, index) => ({\r\n                            state: 'Profit',\r\n                            difference: parseFloat(value.revenue.toFixed(2))\r\n                        }))\r\n                    );\r\n                }\r\n            });\r\n\r\n            // if (res.data.status) {\r\n            //     setRanking(res.data.response);\r\n            // }\r\n        } catch (error) {\r\n            console.error('Cannot sort by month', error);\r\n        } finally {\r\n            console.log(differences);\r\n        }\r\n    };\r\n\r\n    const sortByYear = async () => {\r\n        try {\r\n            const currentYear = new Date().getFullYear();\r\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\r\n                start_month: 1,\r\n                end_month: 12,\r\n                year: currentYear,\r\n                limit: 5\r\n            });\r\n            if (res.data.status) {\r\n                setRanking(res.data.response);\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot sort by month', error);\r\n        } finally {\r\n            setAnchorEl(null);\r\n        }\r\n    };\r\n\r\n    const LoadRanking = async (startMonth, endMonth, year, limit) => {\r\n        try {\r\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-top-provider-by-revenue`, {\r\n                start_month: startMonth,\r\n                end_month: endMonth,\r\n                year,\r\n                limit\r\n            });\r\n            if (res.data.status) {\r\n                setRanking(res.data.response);\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot get top revenue', error);\r\n        } finally {\r\n            setAnchorEl(null);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        LoadRanking(3, 6, 2022, 5);\r\n        // sortByMonth();\r\n        // sortByYear();\r\n        return () => {\r\n            setRanking([]);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Top Revenue</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                color: theme.palette.primary[200],\r\n                                                cursor: 'pointer'\r\n                                            }}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                        <Menu\r\n                                            id=\"menu-popular-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\r\n                                            <MenuItem onClick={() => sortByMonth()}> This Month</MenuItem>\r\n                                            <MenuItem onClick={() => sortByYear()}> This Year </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                <BajajAreaChartCard\r\n                                    merchantName={ranking.length > 0 ? ranking[0].merchant_name : 'Unknown'}\r\n                                    revenu={ranking.length > 0 ? ranking[0].revenue.toFixed(2) : 0.0}\r\n                                    revenueList={[{ data: ranking.map((r) => r.revenue.toFixed(2)) }]}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                {ranking.map((item, index) => (\r\n                                    <div key={index}>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\" sx={{ fontSize: 'small' }}>\r\n                                                            {index + 1}. {item.merchant_name ?? 'Unknown'}\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                            <Grid item>\r\n                                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                                    ${item.revenue.toFixed(2) ?? 0}\r\n                                                                </Typography>\r\n                                                            </Grid>\r\n                                                            <Grid item>\r\n                                                                <Avatar\r\n                                                                    variant=\"rounded\"\r\n                                                                    sx={{\r\n                                                                        width: 16,\r\n                                                                        height: 16,\r\n                                                                        borderRadius: '5px',\r\n                                                                        backgroundColor: theme.palette.success.light,\r\n                                                                        color: theme.palette.success.dark,\r\n                                                                        ml: 2\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                                </Avatar>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography\r\n                                                    variant=\"subtitle2\"\r\n                                                    sx={{\r\n                                                        color:\r\n                                                            differences[index]?.state === 'Profit'\r\n                                                                ? 'success.dark'\r\n                                                                : theme.palette.orange.dark\r\n                                                    }}\r\n                                                >\r\n                                                    ${differences[index]?.difference} {differences[index]?.state}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Divider sx={{ my: 1.5 }} />\r\n                                    </div>\r\n                                ))}\r\n                                {/* <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Bajaj Finery\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            $1839.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.success.light,\r\n                                                                color: theme.palette.success.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\r\n                                            10% Profit\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} /> */}\r\n                                {/* <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    TTML\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            $100.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.orange.light,\r\n                                                                color: theme.palette.orange.dark,\r\n                                                                marginLeft: 1.875\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\r\n                                            10% loss\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Reliance\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            $200.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.success.light,\r\n                                                                color: theme.palette.success.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.success.dark }}>\r\n                                            10% Profit\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    TTML\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            $189.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.orange.light,\r\n                                                                color: theme.palette.orange.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\r\n                                            10% loss\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Stolon\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            $189.00\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.orange.light,\r\n                                                                color: theme.palette.orange.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\r\n                                            10% loss\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\r\n                        <Button size=\"small\" disableElevation>\r\n                            View All\r\n                            <ChevronRightOutlinedIcon />\r\n                        </Button>\r\n                    </CardActions>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nPopularCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PopularCard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalIncomeDarkCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalIncomeLightCard.js",["456","457","458","459","460","461","462","463"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography, Grid, Menu, MenuItem } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\nimport { HOST_NAME } from 'config';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { SHOW_CURRENT_CHART } from 'store/actions';\r\n\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    // overflow: 'hidden',\r\n    // position: 'relative',\r\n    // '&:after': {\r\n    //     content: '\"\"',\r\n    //     position: 'absolute',\r\n    //     width: 210,\r\n    //     height: 210,\r\n    //     background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n    //     borderRadius: '50%',\r\n    //     top: -30,\r\n    //     right: -180\r\n    // },\r\n    // '&:before': {\r\n    //     content: '\"\"',\r\n    //     position: 'absolute',\r\n    //     width: 210,\r\n    //     height: 210,\r\n    //     background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n    //     borderRadius: '50%',\r\n    //     top: -160,\r\n    //     right: -130\r\n    // },\r\n\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    },\r\n    cursor: 'pointer'\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeLightCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [salePerOrder, setSalePerOrder] = useState(0);\r\n    const [isHigher, setIsHigher] = useState(true);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const GetSalePerOrder = async (startMonth, endMonth, year) => {\r\n        try {\r\n            const GetTotalRevenue = async () => {\r\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-total-revenue-by-time`, {\r\n                    start_month: startMonth,\r\n                    end_month: endMonth,\r\n                    year\r\n                });\r\n\r\n                return res.data.response[0];\r\n            };\r\n\r\n            const GetTotalSale = async () => {\r\n                const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-number-order-by-time`, {\r\n                    start_month: startMonth,\r\n                    end_month: endMonth,\r\n                    year\r\n                });\r\n\r\n                return res.data.response[0];\r\n            };\r\n            const res1 = GetTotalRevenue();\r\n            const res2 = GetTotalSale();\r\n\r\n            Promise.all([res1, res2]).then((values) => {\r\n                const totalRevenue = values[0].total_revenue;\r\n                const totalSale = values[1].total_num_orders;\r\n\r\n                setSalePerOrder(totalRevenue / totalSale);\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        GetSalePerOrder(3, 6, 2022);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false} onClick={() => dispatch({ type: SHOW_CURRENT_CHART, currentChart: 3 })}>\r\n                    {/* <Box sx={{ p: 2 }}>\r\n                        <List sx={{ py: 0 }}>\r\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        sx={{\r\n                                            ...theme.typography.commonAvatar,\r\n                                            ...theme.typography.largeAvatar,\r\n                                            backgroundColor: theme.palette.warning.light,\r\n                                            color: theme.palette.warning.dark\r\n                                        }}\r\n                                    >\r\n                                        <StorefrontTwoToneIcon fontSize=\"inherit\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    sx={{\r\n                                        py: 0,\r\n                                        mt: 0.45,\r\n                                        mb: 0.45\r\n                                    }}\r\n                                    primary={<Typography variant=\"h4\">$203k</Typography>}\r\n                                    secondary={\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            sx={{\r\n                                                color: theme.palette.grey[500],\r\n                                                mt: 0.5\r\n                                            }}\r\n                                        >\r\n                                            Total Income\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box> */}\r\n\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.warning.light,\r\n                                                color: theme.palette.warning.dark\r\n                                            }}\r\n                                        >\r\n                                            <StorefrontTwoToneIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.warning.light,\r\n                                                color: theme.palette.warning.dark,\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon color={theme.palette.primary.light} fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <GetAppTwoToneIcon sx={{ mr: 1.75 }} /> Import Card\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <FileCopyTwoToneIcon sx={{ mr: 1.75 }} /> Copy Data\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <PictureAsPdfTwoToneIcon sx={{ mr: 1.75 }} /> Export\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <ArchiveTwoToneIcon sx={{ mr: 1.75 }} /> Archive File\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            ${salePerOrder.toFixed(2)}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.warning.dark,\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.warning.dark\r\n                                    }}\r\n                                >\r\n                                    Sales per order\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeLightCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeLightCard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/TotalGrowthBarChart.js",["464","465"],"import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { HOST_NAME } from 'config';\r\n\r\n// chart data\r\nimport chartData from './chart-data/total-growth-bar-chart';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading, type }) => {\r\n    const [value, setValue] = useState('today');\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const [data, setData] = useState([]);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const grey500 = theme.palette.grey[500];\r\n\r\n    const primary200 = theme.palette.primary[200];\r\n    const primaryDark = theme.palette.primary.dark;\r\n    const secondaryMain = theme.palette.secondary.main;\r\n    const secondaryLight = theme.palette.secondary.light;\r\n\r\n    const toMonths = (data) => {\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n        return data.map((item) => months[item - 1]);\r\n    };\r\n\r\n    const getSum = (data, type) => {\r\n        let sum = 0.0;\r\n        data.forEach((d) => {\r\n            if (type === 1) {\r\n                sum += d.totalRevenue;\r\n            } else if (type === 2) {\r\n                sum += d.numberOrder;\r\n            } else if (type === 3) {\r\n                sum += d.totalRevenue / d.numberOrder;\r\n            }\r\n        });\r\n\r\n        return parseFloat(sum).toFixed(2);\r\n    };\r\n\r\n    const LoadData = async () => {\r\n        try {\r\n            const res = await axios.get(`http://${HOST_NAME}:3010/v1/api/tastie/admin/statics-of-total-revenue-in-the-last-12-month`);\r\n            if (res.data.status && res.data.response.length > 0) {\r\n                setData(res.data.response.reverse());\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot get data of last 12 months');\r\n        } finally {\r\n            console.log(customization);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        LoadData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const newChartData = {\r\n            ...chartData.options,\r\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                },\r\n                categories: toMonths([...data].map((item) => item.month))\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: grey200\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: grey500\r\n                }\r\n            }\r\n            // series: [\r\n            //     {\r\n            //         name: type === 1 ? 'Total revenue' : type === 2 ? 'Total sale' : 'Total sale',\r\n            //         data: [...data].map((item) => {\r\n            //             if (type === 1) {\r\n            //                 return parseFloat(item.totalRevenue).toFixed(2);\r\n            //             } else if (type === 2) {\r\n            //                 return item.numberOrder;\r\n            //             } else if (type === 3) {\r\n            //                 return item.totalRevenue / item.numberOrder;\r\n            //             }\r\n            //         })\r\n            //     }\r\n            // ]\r\n        };\r\n\r\n        if (type === 1) {\r\n            newChartData.series = [\r\n                {\r\n                    name: 'Total revenue',\r\n                    data: [...data].map((item) => parseFloat(item.totalRevenue).toFixed(2))\r\n                }\r\n            ];\r\n        } else if (type === 2) {\r\n            newChartData.series = [\r\n                {\r\n                    name: 'Total sale',\r\n                    data: [...data].map((item) => item.numberOrder)\r\n                }\r\n            ];\r\n        } else if (type === 3) {\r\n            newChartData.series = [\r\n                {\r\n                    name: 'Total sale',\r\n                    data: [...data].map((item) => parseFloat(item.totalRevenue / item.numberOrder).toFixed(2))\r\n                }\r\n            ];\r\n        }\r\n\r\n        // do not load chart when loading\r\n        if (!isLoading) {\r\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\r\n        }\r\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500, data, type]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            {(() => {\r\n                                                switch (type) {\r\n                                                    case 1:\r\n                                                        return <Typography variant=\"subtitle1\">Total revenue</Typography>;\r\n                                                    /* falls through */\r\n\r\n                                                    case 2:\r\n                                                        return <Typography variant=\"subtitle1\">Total Sale</Typography>;\r\n                                                    /* falls through */\r\n\r\n                                                    case 3:\r\n                                                        return <Typography variant=\"subtitle1\">Sale per order</Typography>;\r\n                                                    /* falls through */\r\n\r\n                                                    default:\r\n                                                        return <Typography variant=\"subtitle1\">Total revenue</Typography>;\r\n                                                    /* falls through */\r\n                                                }\r\n                                            })()}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            {(() => {\r\n                                                switch (type) {\r\n                                                    case 1:\r\n                                                        <Typography variant=\"h3\">${getSum(data, 1)}</Typography>;\r\n                                                    /* falls through */\r\n                                                    case 2:\r\n                                                        return <Typography variant=\"h3\">{getSum(data, 2)} orders</Typography>;\r\n                                                    /* falls through */\r\n\r\n                                                    case 3:\r\n                                                        return <Typography variant=\"h3\">{getSum(data, 3)} sales per order</Typography>;\r\n                                                    /* falls through */\r\n\r\n                                                    default:\r\n                                                        return <Typography variant=\"h3\">${getSum(data, 1)}</Typography>;\r\n                                                    /* falls through */\r\n                                                }\r\n                                            })()}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={value}\r\n                                        onChange={(e) => setValue(e.target.value)}\r\n                                    >\r\n                                        {status.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Chart {...chartData} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Breadcrumbs.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/index.js",["466"],"import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Drawer, useMediaQuery } from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { BrowserView, MobileView } from 'react-device-detect';\r\n\r\n// project imports\r\nimport MenuList from './MenuList';\r\nimport LogoSection from '../LogoSection';\r\nimport MenuCard from './MenuCard';\r\nimport { drawerWidth } from 'store/constant';\r\n\r\n// ==============================|| SIDEBAR DRAWER ||============================== //\r\n\r\nconst Sidebar = ({ drawerOpen, drawerToggle, window }) => {\r\n    const theme = useTheme();\r\n    const matchUpMd = useMediaQuery(theme.breakpoints.up('md'));\r\n\r\n    const drawer = (\r\n        <>\r\n            <Box sx={{ display: { xs: 'block', md: 'none' } }}>\r\n                <Box sx={{ display: 'flex', p: 2, mx: 'auto' }}>\r\n                    <LogoSection />\r\n                </Box>\r\n            </Box>\r\n            <BrowserView>\r\n                <PerfectScrollbar\r\n                    component=\"div\"\r\n                    style={{\r\n                        height: !matchUpMd ? 'calc(100vh - 56px)' : 'calc(100vh - 88px)',\r\n                        paddingLeft: '16px',\r\n                        paddingRight: '16px'\r\n                    }}\r\n                >\r\n                    <MenuList />\r\n                    {/* <MenuCard /> */}\r\n                </PerfectScrollbar>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <Box sx={{ px: 2 }}>\r\n                    <MenuList />\r\n                    {/* <MenuCard /> */}\r\n                </Box>\r\n            </MobileView>\r\n        </>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window.document.body : undefined;\r\n\r\n    return (\r\n        <Box component=\"nav\" sx={{ flexShrink: { md: 0 }, width: matchUpMd ? drawerWidth : 'auto' }} aria-label=\"mailbox folders\">\r\n            <Drawer\r\n                container={container}\r\n                variant={matchUpMd ? 'persistent' : 'temporary'}\r\n                anchor=\"left\"\r\n                open={drawerOpen}\r\n                onClose={drawerToggle}\r\n                sx={{\r\n                    '& .MuiDrawer-paper': {\r\n                        width: drawerWidth,\r\n                        background: theme.palette.background.default,\r\n                        color: theme.palette.text.primary,\r\n                        borderRight: 'none',\r\n                        [theme.breakpoints.up('md')]: {\r\n                            top: '88px'\r\n                        }\r\n                    }\r\n                }}\r\n                ModalProps={{ keepMounted: true }}\r\n                color=\"inherit\"\r\n            >\r\n                {drawer}\r\n            </Drawer>\r\n        </Box>\r\n    );\r\n};\r\n\r\nSidebar.propTypes = {\r\n    drawerOpen: PropTypes.bool,\r\n    drawerToggle: PropTypes.func,\r\n    window: PropTypes.object\r\n};\r\n\r\nexport default Sidebar;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/Customization/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-growth-bar-chart.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-order-month-line-chart.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/total-order-year-line-chart.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/BajajAreaChartCard.js",["467","468","469"],"import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport chartData from './chart-data/bajaj-area-chart';\r\n\r\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\r\n\r\nconst BajajAreaChartCard = ({ merchantName = 'Unknown', revenu = 0.0, revenueList = [{ data: 0 }] }) => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const { navType } = customization;\r\n\r\n    const orangeDark = theme.palette.secondary[800];\r\n\r\n    useEffect(() => {\r\n        const newSupportChart = {\r\n            ...chartData.options,\r\n            colors: [orangeDark],\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        };\r\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\r\n    }, [navType, orangeDark]);\r\n\r\n    return (\r\n        <Card sx={{ bgcolor: 'secondary.light' }}>\r\n            <Grid container sx={{ p: 2, pb: 0, color: '#fff' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                {merchantName}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\r\n                                ${revenu}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\r\n                        10% Profit\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Chart {...chartData} series={revenueList} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BajajAreaChartCard;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/index.js",["470"],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/TotalGrowthBarChart.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/TotalIncomeCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/PopularCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/cards/Skeleton/EarningCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/dashboard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/views/dashboard/Default/chart-data/bajaj-area-chart.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/pages.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/utilities.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/menu-items/other.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/ProfileSection/index.js",["471"],"import { useState, useRef, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    ClickAwayListener,\r\n    Divider,\r\n    Grid,\r\n    InputAdornment,\r\n    List,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    OutlinedInput,\r\n    Paper,\r\n    Popper,\r\n    Stack,\r\n    Switch,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport UpgradePlanCard from './UpgradePlanCard';\r\nimport User1 from 'assets/images/users/user-round.svg';\r\n\r\n// assets\r\nimport { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons';\r\n\r\n// ==============================|| PROFILE MENU ||============================== //\r\n\r\nconst ProfileSection = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdm, setSdm] = useState(true);\r\n    const [value, setValue] = useState('');\r\n    const [notification, setNotification] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(-1);\r\n    const [open, setOpen] = useState(false);\r\n    /**\r\n     * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n     * */\r\n    const anchorRef = useRef(null);\r\n    const handleLogout = () => {\r\n        console.log('Logout');\r\n        localStorage.removeItem('@authentication');\r\n        navigate('/free/pages/login/login3');\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleListItemClick = (event, index, route = '') => {\r\n        setSelectedIndex(index);\r\n        handleClose(event);\r\n\r\n        if (route && route !== '') {\r\n            navigate(route);\r\n        }\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const prevOpen = useRef(open);\r\n    useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Chip\r\n                sx={{\r\n                    height: '48px',\r\n                    alignItems: 'center',\r\n                    borderRadius: '27px',\r\n                    transition: 'all .2s ease-in-out',\r\n                    borderColor: theme.palette.primary.light,\r\n                    backgroundColor: theme.palette.primary.light,\r\n                    '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n                        borderColor: theme.palette.primary.main,\r\n                        background: `${theme.palette.primary.main}!important`,\r\n                        color: theme.palette.primary.light,\r\n                        '& svg': {\r\n                            stroke: theme.palette.primary.light\r\n                        }\r\n                    },\r\n                    '& .MuiChip-label': {\r\n                        lineHeight: 0\r\n                    }\r\n                }}\r\n                icon={\r\n                    <Avatar\r\n                        src={User1}\r\n                        sx={{\r\n                            ...theme.typography.mediumAvatar,\r\n                            margin: '8px 0 8px 8px !important',\r\n                            cursor: 'pointer'\r\n                        }}\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    />\r\n                }\r\n                label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n                variant=\"outlined\"\r\n                ref={anchorRef}\r\n                aria-controls={open ? 'menu-list-grow' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleToggle}\r\n                color=\"primary\"\r\n            />\r\n            <Popper\r\n                placement=\"bottom-end\"\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                popperOptions={{\r\n                    modifiers: [\r\n                        {\r\n                            name: 'offset',\r\n                            options: {\r\n                                offset: [0, 14]\r\n                            }\r\n                        }\r\n                    ]\r\n                }}\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Transitions in={open} {...TransitionProps}>\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                                    <Box sx={{ p: 2 }}>\r\n                                        <Stack>\r\n                                            <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                                                <Typography variant=\"h4\">Good Morning,</Typography>\r\n                                                <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n                                                    Johne Doe\r\n                                                </Typography>\r\n                                            </Stack>\r\n                                            <Typography variant=\"subtitle2\">Project Admin</Typography>\r\n                                        </Stack>\r\n                                        <OutlinedInput\r\n                                            sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\r\n                                            id=\"input-search-profile\"\r\n                                            value={value}\r\n                                            onChange={(e) => setValue(e.target.value)}\r\n                                            placeholder=\"Search profile options\"\r\n                                            startAdornment={\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n                                                </InputAdornment>\r\n                                            }\r\n                                            aria-describedby=\"search-helper-text\"\r\n                                            inputProps={{\r\n                                                'aria-label': 'weight'\r\n                                            }}\r\n                                        />\r\n                                        <Divider />\r\n                                    </Box>\r\n                                    <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n                                        <Box sx={{ p: 2 }}>\r\n                                            <UpgradePlanCard />\r\n                                            <Divider />\r\n                                            <Card\r\n                                                sx={{\r\n                                                    bgcolor: theme.palette.primary.light,\r\n                                                    my: 2\r\n                                                }}\r\n                                            >\r\n                                                <CardContent>\r\n                                                    <Grid container spacing={3} direction=\"column\">\r\n                                                        <Grid item>\r\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"subtitle1\">Start DND Mode</Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Switch\r\n                                                                        color=\"primary\"\r\n                                                                        checked={sdm}\r\n                                                                        onChange={(e) => setSdm(e.target.checked)}\r\n                                                                        name=\"sdm\"\r\n                                                                        size=\"small\"\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid item>\r\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"subtitle1\">Allow Notifications</Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Switch\r\n                                                                        checked={notification}\r\n                                                                        onChange={(e) => setNotification(e.target.checked)}\r\n                                                                        name=\"sdm\"\r\n                                                                        size=\"small\"\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                            <Divider />\r\n                                            <List\r\n                                                component=\"nav\"\r\n                                                sx={{\r\n                                                    width: '100%',\r\n                                                    maxWidth: 350,\r\n                                                    minWidth: 300,\r\n                                                    backgroundColor: theme.palette.background.paper,\r\n                                                    borderRadius: '10px',\r\n                                                    [theme.breakpoints.down('md')]: {\r\n                                                        minWidth: '100%'\r\n                                                    },\r\n                                                    '& .MuiListItemButton-root': {\r\n                                                        mt: 0.5\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <ListItemButton\r\n                                                    sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                                    selected={selectedIndex === 0}\r\n                                                    onClick={(event) => handleListItemClick(event, 0, '/user/account-profile/profile1')}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <IconSettings stroke={1.5} size=\"1.3rem\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\r\n                                                </ListItemButton>\r\n                                                <ListItemButton\r\n                                                    sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                                    selected={selectedIndex === 1}\r\n                                                    onClick={(event) => handleListItemClick(event, 1, '/user/social-profile/posts')}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <IconUser stroke={1.5} size=\"1.3rem\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText\r\n                                                        primary={\r\n                                                            <Grid container spacing={1} justifyContent=\"space-between\">\r\n                                                                <Grid item>\r\n                                                                    <Typography variant=\"body2\">Social Profile</Typography>\r\n                                                                </Grid>\r\n                                                                <Grid item>\r\n                                                                    <Chip\r\n                                                                        label=\"02\"\r\n                                                                        size=\"small\"\r\n                                                                        sx={{\r\n                                                                            bgcolor: theme.palette.warning.dark,\r\n                                                                            color: theme.palette.background.default\r\n                                                                        }}\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                        }\r\n                                                    />\r\n                                                </ListItemButton>\r\n                                                <ListItemButton\r\n                                                    sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                                    selected={selectedIndex === 4}\r\n                                                    onClick={handleLogout}\r\n                                                >\r\n                                                    <ListItemIcon>\r\n                                                        <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n                                                </ListItemButton>\r\n                                            </List>\r\n                                        </Box>\r\n                                    </PerfectScrollbar>\r\n                                </MainCard>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Transitions>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileSection;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/SearchSection/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuCard/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/LogoSection/index.js",["472"],"import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { ButtonBase, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport { config } from 'config';\r\nimport Logo from 'ui-component/Logo';\r\n\r\n// ==============================|| MAIN LOGO ||============================== //\r\n\r\nconst LogoSection = () => (\r\n    <ButtonBase disableRipple component={Link} to={config.defaultPath}>\r\n        {/* <Logo /> */}\r\n        <Typography variant=\"subtitle1\" sx={{ fontSize: 'large' }}>\r\n            Tastie\r\n        </Typography>\r\n    </ButtonBase>\r\n);\r\n\r\nexport default LogoSection;\r\n","/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/ProfileSection/UpgradePlanCard.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/NotificationList.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavGroup/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/ui-component/extended/Transitions.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavItem/index.js",[],"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js",[],{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","replacedBy":"482"},{"ruleId":"473","replacedBy":"483"},{"ruleId":"475","replacedBy":"484"},{"ruleId":"477","replacedBy":"485"},{"ruleId":"479","replacedBy":"486"},{"ruleId":"481","replacedBy":"487"},{"ruleId":"488","severity":1,"message":"489","line":43,"column":8,"nodeType":"490","endLine":43,"endColumn":10,"suggestions":"491"},{"ruleId":"492","severity":1,"message":"493","line":12,"column":7,"nodeType":"494","messageId":"495","endLine":12,"endColumn":17},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"497","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":14},{"ruleId":"492","severity":1,"message":"498","line":9,"column":8,"nodeType":"494","messageId":"495","endLine":9,"endColumn":23},{"ruleId":"492","severity":1,"message":"499","line":12,"column":10,"nodeType":"494","messageId":"495","endLine":12,"endColumn":24},{"ruleId":"492","severity":1,"message":"500","line":12,"column":26,"nodeType":"494","messageId":"495","endLine":12,"endColumn":43},{"ruleId":"492","severity":1,"message":"501","line":15,"column":8,"nodeType":"494","messageId":"495","endLine":15,"endColumn":16},{"ruleId":"492","severity":1,"message":"502","line":19,"column":10,"nodeType":"494","messageId":"495","endLine":19,"endColumn":21},{"ruleId":"492","severity":1,"message":"503","line":19,"column":23,"nodeType":"494","messageId":"495","endLine":19,"endColumn":34},{"ruleId":"492","severity":1,"message":"504","line":22,"column":7,"nodeType":"494","messageId":"495","endLine":22,"endColumn":20},{"ruleId":"488","severity":1,"message":"505","line":142,"column":8,"nodeType":"490","endLine":142,"endColumn":10,"suggestions":"506"},{"ruleId":"492","severity":1,"message":"507","line":187,"column":38,"nodeType":"494","messageId":"495","endLine":187,"endColumn":43},{"ruleId":"492","severity":1,"message":"508","line":187,"column":45,"nodeType":"494","messageId":"495","endLine":187,"endColumn":52},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"497","line":4,"column":10,"nodeType":"494","messageId":"495","endLine":4,"endColumn":14},{"ruleId":"492","severity":1,"message":"509","line":4,"column":52,"nodeType":"494","messageId":"495","endLine":4,"endColumn":66},{"ruleId":"492","severity":1,"message":"504","line":17,"column":7,"nodeType":"494","messageId":"495","endLine":17,"endColumn":20},{"ruleId":"488","severity":1,"message":"510","line":53,"column":8,"nodeType":"490","endLine":53,"endColumn":10,"suggestions":"511"},{"ruleId":"512","severity":1,"message":"513","line":60,"column":17,"nodeType":"514","messageId":"515","endLine":60,"endColumn":33},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"516","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":17},{"ruleId":"492","severity":1,"message":"517","line":6,"column":21,"nodeType":"494","messageId":"495","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"518","line":7,"column":10,"nodeType":"494","messageId":"495","endLine":7,"endColumn":18},{"ruleId":"492","severity":1,"message":"519","line":11,"column":8,"nodeType":"494","messageId":"495","endLine":11,"endColumn":15},{"ruleId":"492","severity":1,"message":"498","line":13,"column":8,"nodeType":"494","messageId":"495","endLine":13,"endColumn":23},{"ruleId":"492","severity":1,"message":"520","line":14,"column":10,"nodeType":"494","messageId":"495","endLine":14,"endColumn":21},{"ruleId":"492","severity":1,"message":"521","line":15,"column":10,"nodeType":"494","messageId":"495","endLine":15,"endColumn":25},{"ruleId":"492","severity":1,"message":"522","line":45,"column":11,"nodeType":"494","messageId":"495","endLine":45,"endColumn":16},{"ruleId":"492","severity":1,"message":"523","line":48,"column":30,"nodeType":"494","messageId":"495","endLine":48,"endColumn":49},{"ruleId":"492","severity":1,"message":"524","line":49,"column":12,"nodeType":"494","messageId":"495","endLine":49,"endColumn":19},{"ruleId":"492","severity":1,"message":"525","line":1,"column":10,"nodeType":"494","messageId":"495","endLine":1,"endColumn":18},{"ruleId":"492","severity":1,"message":"526","line":1,"column":20,"nodeType":"494","messageId":"495","endLine":1,"endColumn":29},{"ruleId":"492","severity":1,"message":"502","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":21},{"ruleId":"492","severity":1,"message":"527","line":13,"column":8,"nodeType":"494","messageId":"495","endLine":13,"endColumn":12},{"ruleId":"492","severity":1,"message":"528","line":15,"column":8,"nodeType":"494","messageId":"495","endLine":15,"endColumn":13},{"ruleId":"492","severity":1,"message":"529","line":18,"column":10,"nodeType":"494","messageId":"495","endLine":18,"endColumn":19},{"ruleId":"492","severity":1,"message":"530","line":19,"column":10,"nodeType":"494","messageId":"495","endLine":19,"endColumn":17},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"518","line":5,"column":10,"nodeType":"494","messageId":"495","endLine":5,"endColumn":18},{"ruleId":"492","severity":1,"message":"531","line":16,"column":7,"nodeType":"494","messageId":"495","endLine":16,"endColumn":14},{"ruleId":"492","severity":1,"message":"532","line":33,"column":7,"nodeType":"494","messageId":"495","endLine":33,"endColumn":11},{"ruleId":"492","severity":1,"message":"532","line":69,"column":12,"nodeType":"494","messageId":"495","endLine":69,"endColumn":16},{"ruleId":"492","severity":1,"message":"533","line":11,"column":5,"nodeType":"494","messageId":"495","endLine":11,"endColumn":12},{"ruleId":"492","severity":1,"message":"534","line":40,"column":8,"nodeType":"494","messageId":"495","endLine":40,"endColumn":14},{"ruleId":"492","severity":1,"message":"535","line":46,"column":11,"nodeType":"494","messageId":"495","endLine":46,"endColumn":22},{"ruleId":"492","severity":1,"message":"536","line":47,"column":11,"nodeType":"494","messageId":"495","endLine":47,"endColumn":22},{"ruleId":"492","severity":1,"message":"537","line":48,"column":11,"nodeType":"494","messageId":"495","endLine":48,"endColumn":24},{"ruleId":"492","severity":1,"message":"538","line":53,"column":11,"nodeType":"494","messageId":"495","endLine":53,"endColumn":24},{"ruleId":"492","severity":1,"message":"539","line":137,"column":44,"nodeType":"494","messageId":"495","endLine":137,"endColumn":53},{"ruleId":"492","severity":1,"message":"540","line":137,"column":55,"nodeType":"494","messageId":"495","endLine":137,"endColumn":64},{"ruleId":"492","severity":1,"message":"541","line":137,"column":66,"nodeType":"494","messageId":"495","endLine":137,"endColumn":79},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"517","line":6,"column":21,"nodeType":"494","messageId":"495","endLine":6,"endColumn":25},{"ruleId":"492","severity":1,"message":"542","line":8,"column":10,"nodeType":"494","messageId":"495","endLine":8,"endColumn":23},{"ruleId":"492","severity":1,"message":"543","line":8,"column":33,"nodeType":"494","messageId":"495","endLine":8,"endColumn":50},{"ruleId":"492","severity":1,"message":"544","line":8,"column":52,"nodeType":"494","messageId":"495","endLine":8,"endColumn":68},{"ruleId":"492","severity":1,"message":"519","line":11,"column":8,"nodeType":"494","messageId":"495","endLine":11,"endColumn":15},{"ruleId":"492","severity":1,"message":"498","line":13,"column":8,"nodeType":"494","messageId":"495","endLine":13,"endColumn":23},{"ruleId":"492","severity":1,"message":"520","line":14,"column":10,"nodeType":"494","messageId":"495","endLine":14,"endColumn":21},{"ruleId":"492","severity":1,"message":"496","line":2,"column":8,"nodeType":"494","messageId":"495","endLine":2,"endColumn":13},{"ruleId":"492","severity":1,"message":"542","line":21,"column":10,"nodeType":"494","messageId":"495","endLine":21,"endColumn":23},{"ruleId":"492","severity":1,"message":"543","line":21,"column":33,"nodeType":"494","messageId":"495","endLine":21,"endColumn":50},{"ruleId":"492","severity":1,"message":"544","line":21,"column":52,"nodeType":"494","messageId":"495","endLine":21,"endColumn":68},{"ruleId":"492","severity":1,"message":"522","line":36,"column":11,"nodeType":"494","messageId":"495","endLine":36,"endColumn":16},{"ruleId":"492","severity":1,"message":"545","line":201,"column":54,"nodeType":"494","messageId":"495","endLine":201,"endColumn":55},{"ruleId":"492","severity":1,"message":"546","line":11,"column":8,"nodeType":"494","messageId":"495","endLine":11,"endColumn":27},{"ruleId":"492","severity":1,"message":"547","line":6,"column":29,"nodeType":"494","messageId":"495","endLine":6,"endColumn":33},{"ruleId":"492","severity":1,"message":"548","line":6,"column":35,"nodeType":"494","messageId":"495","endLine":6,"endColumn":43},{"ruleId":"492","severity":1,"message":"549","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":21},{"ruleId":"492","severity":1,"message":"550","line":19,"column":8,"nodeType":"494","messageId":"495","endLine":19,"endColumn":25},{"ruleId":"492","severity":1,"message":"551","line":20,"column":8,"nodeType":"494","messageId":"495","endLine":20,"endColumn":27},{"ruleId":"492","severity":1,"message":"552","line":21,"column":8,"nodeType":"494","messageId":"495","endLine":21,"endColumn":31},{"ruleId":"492","severity":1,"message":"553","line":22,"column":8,"nodeType":"494","messageId":"495","endLine":22,"endColumn":26},{"ruleId":"492","severity":1,"message":"554","line":71,"column":12,"nodeType":"494","messageId":"495","endLine":71,"endColumn":20},{"ruleId":"492","severity":1,"message":"555","line":76,"column":11,"nodeType":"494","messageId":"495","endLine":76,"endColumn":22},{"ruleId":"492","severity":1,"message":"556","line":80,"column":11,"nodeType":"494","messageId":"495","endLine":80,"endColumn":22},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"557","line":20,"column":8,"nodeType":"494","messageId":"495","endLine":20,"endColumn":37},{"ruleId":"492","severity":1,"message":"558","line":86,"column":47,"nodeType":"494","messageId":"495","endLine":86,"endColumn":52},{"ruleId":"492","severity":1,"message":"559","line":9,"column":8,"nodeType":"494","messageId":"495","endLine":9,"endColumn":13},{"ruleId":"492","severity":1,"message":"560","line":15,"column":8,"nodeType":"494","messageId":"495","endLine":15,"endColumn":22},{"ruleId":"492","severity":1,"message":"561","line":16,"column":8,"nodeType":"494","messageId":"495","endLine":16,"endColumn":21},{"ruleId":"492","severity":1,"message":"537","line":77,"column":11,"nodeType":"494","messageId":"495","endLine":77,"endColumn":24},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"557","line":20,"column":8,"nodeType":"494","messageId":"495","endLine":20,"endColumn":37},{"ruleId":"492","severity":1,"message":"558","line":86,"column":47,"nodeType":"494","messageId":"495","endLine":86,"endColumn":52},{"ruleId":"492","severity":1,"message":"496","line":1,"column":8,"nodeType":"494","messageId":"495","endLine":1,"endColumn":13},{"ruleId":"492","severity":1,"message":"562","line":6,"column":23,"nodeType":"494","messageId":"495","endLine":6,"endColumn":27},{"ruleId":"492","severity":1,"message":"563","line":6,"column":29,"nodeType":"494","messageId":"495","endLine":6,"endColumn":37},{"ruleId":"492","severity":1,"message":"564","line":6,"column":39,"nodeType":"494","messageId":"495","endLine":6,"endColumn":53},{"ruleId":"492","severity":1,"message":"565","line":6,"column":55,"nodeType":"494","messageId":"495","endLine":6,"endColumn":67},{"ruleId":"492","severity":1,"message":"566","line":15,"column":8,"nodeType":"494","messageId":"495","endLine":15,"endColumn":19},{"ruleId":"492","severity":1,"message":"567","line":94,"column":12,"nodeType":"494","messageId":"495","endLine":94,"endColumn":20},{"ruleId":"492","severity":1,"message":"568","line":94,"column":22,"nodeType":"494","messageId":"495","endLine":94,"endColumn":33},{"ruleId":"569","severity":1,"message":"570","line":42,"column":43,"nodeType":"571","messageId":"572","endLine":42,"endColumn":47},{"ruleId":"488","severity":1,"message":"573","line":95,"column":8,"nodeType":"490","endLine":95,"endColumn":10,"suggestions":"574"},{"ruleId":"492","severity":1,"message":"575","line":14,"column":8,"nodeType":"494","messageId":"495","endLine":14,"endColumn":16},{"ruleId":"569","severity":1,"message":"576","line":17,"column":31,"nodeType":"571","messageId":"572","endLine":17,"endColumn":55},{"ruleId":"569","severity":1,"message":"577","line":17,"column":57,"nodeType":"571","messageId":"572","endLine":17,"endColumn":69},{"ruleId":"569","severity":1,"message":"578","line":17,"column":71,"nodeType":"571","messageId":"572","endLine":17,"endColumn":98},{"ruleId":"492","severity":1,"message":"579","line":4,"column":8,"nodeType":"494","messageId":"495","endLine":4,"endColumn":13},{"ruleId":"492","severity":1,"message":"580","line":48,"column":11,"nodeType":"494","messageId":"495","endLine":48,"endColumn":19},{"ruleId":"492","severity":1,"message":"527","line":8,"column":8,"nodeType":"494","messageId":"495","endLine":8,"endColumn":12},"lines-around-directive",["581"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["581"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveAccount'. Either include it or remove the dependency array.","ArrayExpression",["582"],"no-unused-vars","'UtilsColor' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'Card' is defined but never used.","'SecondaryAction' is defined but never used.","'CONNECT_SOCKET' is defined but never used.","'DISCONNECT_SOCKET' is defined but never used.","'LinkIcon' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'IFrameWrapper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetAllEcoupon'. Either include it or remove the dependency array.",["583"],"'event' is defined but never used.","'details' is defined but never used.","'FormHelperText' is defined but never used.","React Hook useEffect has a missing dependency: 'dispacth'. Either include it or remove the dependency array.",["584"],"no-alert","Unexpected alert.","CallExpression","unexpected","'PropTypes' is defined but never used.","'Grid' is defined but never used.","'DataGrid' is defined but never used.","'SubCard' is defined but never used.","'gridSpacing' is defined but never used.","'providerColumns' is defined but never used.","'theme' is assigned a value but never used.","'setSelectedProvider' is assigned a value but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Logo' is defined but never used.","'axios' is defined but never used.","'HOST_NAME' is defined but never used.","'SIGN_IN' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'Divider' is defined but never used.","'Google' is defined but never used.","'scriptedRef' is assigned a value but never used.","'matchDownSM' is assigned a value but never used.","'customization' is assigned a value but never used.","'googleHandler' is assigned a value but never used.","'setErrors' is defined but never used.","'setStatus' is defined but never used.","'setSubmitting' is defined but never used.","'AccountCircle' is defined but never used.","'SearchOffOutlined' is defined but never used.","'SearchOffRounded' is defined but never used.","'_' is defined but never used.","'TotalIncomeDarkCard' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'MoreHorizIcon' is defined but never used.","'GetAppTwoToneIcon' is defined but never used.","'FileCopyTwoToneIcon' is defined but never used.","'PictureAsPdfTwoToneIcon' is defined but never used.","'ArchiveTwoToneIcon' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'KeyboardArrowDownOutlinedIcon' is defined but never used.","'index' is defined but never used.","'Chart' is defined but never used.","'ChartDataMonth' is defined but never used.","'ChartDataYear' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'EarningIcon' is defined but never used.","'isHigher' is assigned a value but never used.","'setIsHigher' is assigned a value but never used.","react/prop-types","'type' is missing in props validation","Property","missingPropType","React Hook useEffect has a missing dependency: 'LoadData'. Either include it or remove the dependency array.",["585"],"'MenuCard' is defined but never used.","'merchantName' is missing in props validation","'revenu' is missing in props validation","'revenueList' is missing in props validation","'other' is defined but never used.","'dispatch' is assigned a value but never used.","padding-line-between-statements",{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},"Update the dependencies array to be: [retrieveAccount]",{"range":"594","text":"595"},"Update the dependencies array to be: [GetAllEcoupon]",{"range":"596","text":"597"},"Update the dependencies array to be: [dispacth]",{"range":"598","text":"599"},"Update the dependencies array to be: [LoadData]",{"range":"600","text":"601"},[1419,1421],"[retrieveAccount]",[4832,4834],"[GetAllEcoupon]",[1628,1630],"[dispacth]",[2964,2966],"[LoadData]"]