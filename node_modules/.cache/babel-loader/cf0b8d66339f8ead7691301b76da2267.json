{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/EarningCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'; // material-ui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography, Button } from '@mui/material'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\nimport { SHOW_CURRENT_CHART } from 'store/actions';\nimport { HOST_NAME } from '../../../config'; // assets\n\nimport EarningIcon from \"assets/images/icons/earning.svg\";\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined'; // libraries\n\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.secondary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&:after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: theme.palette.secondary[800],\n      borderRadius: '50%',\n      top: -85,\n      right: -95,\n      [theme.breakpoints.down('sm')]: {\n        top: -105,\n        right: -140\n      }\n    },\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: theme.palette.secondary[800],\n      borderRadius: '50%',\n      top: -125,\n      right: -15,\n      opacity: 0.5,\n      [theme.breakpoints.down('sm')]: {\n        top: -155,\n        right: -70\n      }\n    },\n    cursor: 'pointer'\n  };\n}); // ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\n\nconst EarningCard = _ref2 => {\n  _s();\n\n  var _totalRevenue$toFixed;\n\n  let {\n    isLoading\n  } = _ref2;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [timeValue, setTimeValue] = useState('Month');\n  const [isHigher, setIsHigher] = useState(true);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeTime = (event, newTimeValue) => {\n    event.stopPropagation();\n    setTimeValue(newTimeValue);\n  };\n\n  const GetTotalRevenue = async (startMonth, endMonth, year) => {\n    // try {\n    //     const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-total-revenue-by-time', {\n    //         start_month: startMonth,\n    //         end_month: endMonth,\n    //         year\n    //     });\n    //     if (res.data.status && res.data.response.length > 0) {\n    //         setTotalRevenue(res.data.response[0].total_revenue);\n    //     }\n    // } catch (error) {\n    //     console.error(error);\n    // }\n    const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-total-revenue-by-time`, {\n      start_month: startMonth,\n      end_month: endMonth,\n      year\n    });\n    return res.data.response[0];\n  };\n\n  useEffect(() => {\n    const currentMonth = new Date().getMonth() + 1;\n    const currentYear = new Date().getFullYear();\n\n    if (timeValue === 'Month') {\n      // GetTotalRevenue(currentMonth, currentMonth, currentYear);\n      const getPreviousMonth = GetTotalRevenue(currentMonth - 1, currentMonth - 1, currentYear);\n      const getCurrentMonth = GetTotalRevenue(currentMonth, currentMonth, currentYear);\n      Promise.all([getPreviousMonth, getCurrentMonth]).then(values => {\n        setTotalRevenue(values[1].total_revenue);\n        setIsHigher(values[0] < values[1]);\n      });\n    } else {\n      const getPreviousMonth = GetTotalRevenue(1, 12, currentYear);\n      const getCurrentMonth = GetTotalRevenue(1, 12, currentYear - 1);\n      Promise.all([getPreviousMonth, getCurrentMonth]).then(values => {\n        setTotalRevenue(values[1].total_revenue);\n        setIsHigher(values[0] < values[1]);\n      });\n    }\n  }, [timeValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonEarningCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      onClick: () => dispatch({\n        type: SHOW_CURRENT_CHART,\n        currentChart: 1\n      }),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2.25\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  variant: \"rounded\",\n                  sx: { ...theme.typography.commonAvatar,\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: theme.palette.secondary[800],\n                    mt: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: EarningIcon,\n                    alt: \"Notification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: timeValue === 'Month' ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit',\n                    zIndex: 1\n                  },\n                  onClick: e => handleChangeTime(e, 'Month'),\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: timeValue === 'Year' ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit',\n                    zIndex: 1\n                  },\n                  onClick: e => handleChangeTime(e, 'Year'),\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    fontSize: '2.125rem',\n                    fontWeight: 500,\n                    mr: 1,\n                    mt: 1.75,\n                    mb: 0.75\n                  },\n                  children: [\"$\", (_totalRevenue$toFixed = totalRevenue.toFixed(2)) !== null && _totalRevenue$toFixed !== void 0 ? _totalRevenue$toFixed : 0.0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    cursor: 'pointer',\n                    ...theme.typography.smallAvatar,\n                    backgroundColor: theme.palette.secondary[200],\n                    color: theme.palette.secondary.dark\n                  },\n                  children: isHigher ? /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n                    fontSize: \"inherit\",\n                    sx: {\n                      transform: 'rotate3d(1, 1, 1, 45deg)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                    fontSize: \"inherit\",\n                    sx: {\n                      transform: 'rotate3d(1, 1, 1, 45deg)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              mb: 1.25\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '1rem',\n                fontWeight: 500,\n                color: theme.palette.secondary[200]\n              },\n              children: \"Total Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(EarningCard, \"h+W5fW6/GurklkjInuQ09+gX3oA=\", false, function () {\n  return [useTheme, useDispatch];\n});\n\n_c = EarningCard;\nEarningCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default EarningCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EarningCard\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/EarningCard.js"],"names":["PropTypes","useState","useEffect","styled","useTheme","Avatar","Box","Grid","Menu","MenuItem","Typography","Button","MainCard","SkeletonEarningCard","SHOW_CURRENT_CHART","HOST_NAME","MoreHorizIcon","ArrowUpwardIcon","ArrowDownwardIcon","GetAppTwoToneIcon","FileCopyTwoToneIcon","PictureAsPdfTwoToneIcon","ArchiveTwoToneIcon","axios","useDispatch","CardWrapper","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","cursor","EarningCard","isLoading","dispatch","anchorEl","setAnchorEl","totalRevenue","setTotalRevenue","timeValue","setTimeValue","isHigher","setIsHigher","handleClick","event","currentTarget","handleClose","handleChangeTime","newTimeValue","stopPropagation","GetTotalRevenue","startMonth","endMonth","year","res","post","start_month","end_month","data","response","currentMonth","Date","getMonth","currentYear","getFullYear","getPreviousMonth","getCurrentMonth","Promise","all","then","values","total_revenue","type","currentChart","p","typography","commonAvatar","largeAvatar","mt","EarningIcon","zIndex","e","fontSize","fontWeight","mr","mb","toFixed","smallAvatar","transform","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography, Button } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\nimport { SHOW_CURRENT_CHART } from 'store/actions';\r\nimport { HOST_NAME } from '../../../config';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    },\r\n    cursor: 'pointer'\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n    const [timeValue, setTimeValue] = useState('Month');\r\n    const [isHigher, setIsHigher] = useState(true);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChangeTime = (event, newTimeValue) => {\r\n        event.stopPropagation();\r\n        setTimeValue(newTimeValue);\r\n    };\r\n\r\n    const GetTotalRevenue = async (startMonth, endMonth, year) => {\r\n        // try {\r\n        //     const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-total-revenue-by-time', {\r\n        //         start_month: startMonth,\r\n        //         end_month: endMonth,\r\n        //         year\r\n        //     });\r\n        //     if (res.data.status && res.data.response.length > 0) {\r\n        //         setTotalRevenue(res.data.response[0].total_revenue);\r\n        //     }\r\n        // } catch (error) {\r\n        //     console.error(error);\r\n        // }\r\n        const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-total-revenue-by-time`, {\r\n            start_month: startMonth,\r\n            end_month: endMonth,\r\n            year\r\n        });\r\n\r\n        return res.data.response[0];\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1;\r\n        const currentYear = new Date().getFullYear();\r\n\r\n        if (timeValue === 'Month') {\r\n            // GetTotalRevenue(currentMonth, currentMonth, currentYear);\r\n            const getPreviousMonth = GetTotalRevenue(currentMonth - 1, currentMonth - 1, currentYear);\r\n            const getCurrentMonth = GetTotalRevenue(currentMonth, currentMonth, currentYear);\r\n            Promise.all([getPreviousMonth, getCurrentMonth]).then((values) => {\r\n                setTotalRevenue(values[1].total_revenue);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        } else {\r\n            const getPreviousMonth = GetTotalRevenue(1, 12, currentYear);\r\n            const getCurrentMonth = GetTotalRevenue(1, 12, currentYear - 1);\r\n            Promise.all([getPreviousMonth, getCurrentMonth]).then((values) => {\r\n                setTotalRevenue(values[1].total_revenue);\r\n                setIsHigher(values[0] < values[1]);\r\n            });\r\n        }\r\n    }, [timeValue]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false} onClick={() => dispatch({ type: SHOW_CURRENT_CHART, currentChart: 1 })}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.secondary[800],\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <img src={EarningIcon} alt=\"Notification\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.mediumAvatar,\r\n                                                backgroundColor: theme.palette.secondary.dark,\r\n                                                color: theme.palette.secondary[200],\r\n                                                zIndex: 1\r\n                                            }}\r\n                                            aria-controls=\"menu-earning-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        >\r\n                                            <MoreHorizIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                        <Menu\r\n                                            id=\"menu-earning-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>\r\n                                                <Typography>This Month</Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem>\r\n                                                <Typography>This year</Typography>\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    </Grid> */}\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Month' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit', zIndex: 1 }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Month')}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue === 'Year' ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit', zIndex: 1 }}\r\n                                            onClick={(e) => handleChangeTime(e, 'Year')}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            ${totalRevenue.toFixed(2) ?? 0.0}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            {isHigher ? (\r\n                                                <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                            ) : (\r\n                                                <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                            )}\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.secondary[200]\r\n                                    }}\r\n                                >\r\n                                    Total Revenue\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n"]},"metadata":{},"sourceType":"module"}