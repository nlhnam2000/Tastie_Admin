{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/pages/authentication/auth-forms/AuthLogin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Stack, Typography, useMediaQuery } from '@mui/material'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios'; // project imports\n\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { HOST_NAME } from 'config';\nimport { SIGN_IN } from 'store/actions'; // assets\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Google from \"assets/images/icons/social-google.svg\"; // ============================|| FIREBASE - LOGIN ||============================ //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FirebaseLogin = _ref => {\n  _s();\n\n  let { ...others\n  } = _ref;\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n  const customization = useSelector(state => state.customization);\n  const [checked, setChecked] = useState(true);\n  const dispatch = useDispatch();\n\n  const googleHandler = async () => {\n    console.error('Login');\n  };\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Sign in with Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'info@codedthemes.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, _ref2) => {\n        let {\n          setErrors,\n          setStatus,\n          setSubmitting\n        } = _ref2;\n\n        // try {\n        //     if (scriptedRef.current) {\n        //         setStatus({ success: true });\n        //         setSubmitting(false);\n        //     }\n        // } catch (err) {\n        //     console.error(err);\n        //     if (scriptedRef.current) {\n        //         setStatus({ success: false });\n        //         setErrors({ submit: err.message });\n        //         setSubmitting(false);\n        //     }\n        // }\n        try {\n          const res = await axios.post(`http://${HOST_NAME}/v1/api/tastie/admin/sign-in`, {\n            email: values.email,\n            password: values.password\n          });\n\n          if (res.data.status) {\n            dispatch({\n              type: SIGN_IN,\n              account: {\n                email: 'admin1@gmail.com',\n                name: 'Admin',\n                isAuth: true\n              }\n            });\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      },\n      children: _ref3 => {\n        let {\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          ...others,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: Boolean(touched.email && errors.email),\n            sx: { ...theme.typography.customInput\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-email-login\",\n              children: \"Email Address / Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-email-login\",\n              type: \"email\",\n              value: values.email,\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              label: \"Email Address / Username\",\n              inputProps: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-email-login\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: Boolean(touched.password && errors.password),\n            sx: { ...theme.typography.customInput\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-password-login\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-password-login\",\n              type: showPassword ? 'text' : 'password',\n              value: values.password,\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"toggle password visibility\",\n                  onClick: handleClickShowPassword,\n                  onMouseDown: handleMouseDownPassword,\n                  edge: \"end\",\n                  size: \"large\",\n                  children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 61\n                  }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this),\n              label: \"Password\",\n              inputProps: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              id: \"standard-weight-helper-text-password-login\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: checked,\n                onChange: event => setChecked(event.target.checked),\n                name: \"checked\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this),\n              label: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"secondary\",\n              sx: {\n                textDecoration: 'none',\n                cursor: 'pointer'\n              },\n              children: \"Forgot Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.submit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disableElevation: true,\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FirebaseLogin, \"fSQXIilfiKpkzKwQFZG0IrYNN+U=\", false, function () {\n  return [useTheme, useScriptRef, useMediaQuery, useSelector, useDispatch];\n});\n\n_c = FirebaseLogin;\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/pages/authentication/auth-forms/AuthLogin.js"],"names":["useState","useSelector","useDispatch","useTheme","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Stack","Typography","useMediaQuery","Yup","Formik","axios","useScriptRef","AnimateButton","HOST_NAME","SIGN_IN","Visibility","VisibilityOff","FirebaseLogin","others","theme","scriptedRef","matchDownSM","breakpoints","down","customization","state","checked","setChecked","dispatch","googleHandler","console","error","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","mb","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","res","post","data","status","type","account","name","isAuth","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","typography","customInput","target","textDecoration","cursor","mt"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { HOST_NAME } from 'config';\r\nimport { SIGN_IN } from 'store/actions';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport Google from 'assets/images/icons/social-google.svg';\r\n\r\n// ============================|| FIREBASE - LOGIN ||============================ //\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [checked, setChecked] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Login');\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    {/* <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton> */}\r\n                </Grid>\r\n                {/* <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            sx={{\r\n                                cursor: 'unset',\r\n                                m: 2,\r\n                                py: 0.5,\r\n                                px: 7,\r\n                                borderColor: `${theme.palette.grey[100]} !important`,\r\n                                color: `${theme.palette.grey[900]}!important`,\r\n                                fontWeight: 500,\r\n                                borderRadius: `${customization.borderRadius}px`\r\n                            }}\r\n                            disableRipple\r\n                            disabled\r\n                        >\r\n                            OR\r\n                        </Button>\r\n\r\n                        <Divider sx={{ flexGrow: 1 }} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid> */}\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    // try {\r\n                    //     if (scriptedRef.current) {\r\n                    //         setStatus({ success: true });\r\n                    //         setSubmitting(false);\r\n                    //     }\r\n                    // } catch (err) {\r\n                    //     console.error(err);\r\n                    //     if (scriptedRef.current) {\r\n                    //         setStatus({ success: false });\r\n                    //         setErrors({ submit: err.message });\r\n                    //         setSubmitting(false);\r\n                    //     }\r\n                    // }\r\n                    try {\r\n                        const res = await axios.post(`http://${HOST_NAME}/v1/api/tastie/admin/sign-in`, {\r\n                            email: values.email,\r\n                            password: values.password\r\n                        });\r\n\r\n                        if (res.data.status) {\r\n                            dispatch({\r\n                                type: SIGN_IN,\r\n                                account: {\r\n                                    email: 'admin1@gmail.com',\r\n                                    name: 'Admin',\r\n                                    isAuth: true\r\n                                }\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(error);\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n"]},"metadata":{},"sourceType":"module"}