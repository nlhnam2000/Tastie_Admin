{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/TotalOrderLineChartCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'; // material-ui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material'; // third-party\n\nimport Chart from 'react-apexcharts'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart'; // assets\n\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward'; // libraries\n\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SHOW_CURRENT_CHART } from 'store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: theme.palette.primary.dark,\n    color: '#fff',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n      position: 'relative',\n      zIndex: 5\n    },\n    '&:after': {\n      content: '\"\"',\n      position: 'absolute',\n      width: 210,\n      height: 210,\n      background: theme.palette.primary[800],\n      borderRadius: '50%',\n      zIndex: 1,\n      top: -85,\n      right: -95,\n      [theme.breakpoints.down('sm')]: {\n        top: -105,\n        right: -140\n      }\n    },\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      zIndex: 1,\n      width: 210,\n      height: 210,\n      background: theme.palette.primary[800],\n      borderRadius: '50%',\n      top: -125,\n      right: -15,\n      opacity: 0.5,\n      [theme.breakpoints.down('sm')]: {\n        top: -155,\n        right: -70\n      }\n    },\n    cursor: 'pointer'\n  };\n}); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst TotalOrderLineChartCard = _ref2 => {\n  _s();\n\n  let {\n    isLoading\n  } = _ref2;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const customization = useSelector(state => state.customization);\n  const [timeValue, setTimeValue] = useState(false);\n  const [totalSale, setTotalSale] = useState(0);\n\n  const handleChangeTime = (event, newValue) => {\n    setTimeValue(newValue);\n  };\n\n  const GetTotalSale = async (startMonth, endMonth, year) => {\n    try {\n      const res = await axios.post('http://localhost:3010/v1/api/tastie/admin/get-number-order-by-time', {\n        start_month: startMonth,\n        end_month: endMonth,\n        year\n      });\n\n      if (res.data.status && res.data.response.length > 0) {\n        setTotalSale(res.data.response[0].total_num_orders);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const currentMonth = new Date().getMonth() + 1;\n    const currentYear = new Date().getFullYear();\n    GetTotalSale(3, 6, 2022);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalOrderCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CardWrapper, {\n      border: false,\n      content: false,\n      onClick: () => {\n        dispatch({\n          type: SHOW_CURRENT_CHART,\n          currentChart: 2\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  variant: \"rounded\",\n                  sx: { ...theme.typography.commonAvatar,\n                    ...theme.typography.largeAvatar,\n                    backgroundColor: theme.palette.primary[800],\n                    color: '#fff',\n                    mt: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LocalMallOutlinedIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, true),\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disableElevation: true,\n                  variant: !timeValue ? 'contained' : 'text',\n                  size: \"small\",\n                  sx: {\n                    color: 'inherit'\n                  },\n                  onClick: e => handleChangeTime(e, false),\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              mb: 0.75\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: timeValue ? /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: \"$108\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '2.125rem',\n                        fontWeight: 500,\n                        mr: 1,\n                        mt: 1.75,\n                        mb: 0.75\n                      },\n                      children: [\"$\", totalSale.toFixed(2)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: { ...theme.typography.smallAvatar,\n                        cursor: 'pointer',\n                        backgroundColor: theme.palette.primary[200],\n                        color: theme.palette.primary.dark\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                        fontSize: \"inherit\",\n                        sx: {\n                          transform: 'rotate3d(1, 1, 1, 45deg)'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontSize: '1rem',\n                        fontWeight: 500,\n                        color: theme.palette.primary[200]\n                      },\n                      children: \"Total Sales\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TotalOrderLineChartCard, \"hyb556Vx7+OsDH0EynmstO4nBNw=\", false, function () {\n  return [useTheme, useDispatch, useSelector];\n});\n\n_c = TotalOrderLineChartCard;\nTotalOrderLineChartCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalOrderLineChartCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalOrderLineChartCard\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/TotalOrderLineChartCard.js"],"names":["PropTypes","useState","useEffect","useTheme","styled","Avatar","Box","Button","Grid","Typography","Chart","MainCard","SkeletonTotalOrderCard","ChartDataMonth","ChartDataYear","LocalMallOutlinedIcon","ArrowDownwardIcon","axios","useDispatch","useSelector","SHOW_CURRENT_CHART","CardWrapper","theme","backgroundColor","palette","primary","dark","color","overflow","position","zIndex","content","width","height","background","borderRadius","top","right","breakpoints","down","opacity","cursor","TotalOrderLineChartCard","isLoading","dispatch","customization","state","timeValue","setTimeValue","totalSale","setTotalSale","handleChangeTime","event","newValue","GetTotalSale","startMonth","endMonth","year","res","post","start_month","end_month","data","status","response","length","total_num_orders","error","console","currentMonth","Date","getMonth","currentYear","getFullYear","type","currentChart","p","typography","commonAvatar","largeAvatar","mt","e","mb","fontSize","fontWeight","mr","toFixed","smallAvatar","transform","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SHOW_CURRENT_CHART } from 'store/actions';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    },\r\n    cursor: 'pointer'\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const [totalSale, setTotalSale] = useState(0);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    const GetTotalSale = async (startMonth, endMonth, year) => {\r\n        try {\r\n            const res = await axios.post('http://localhost:3010/v1/api/tastie/admin/get-number-order-by-time', {\r\n                start_month: startMonth,\r\n                end_month: endMonth,\r\n                year\r\n            });\r\n\r\n            if (res.data.status && res.data.response.length > 0) {\r\n                setTotalSale(res.data.response[0].total_num_orders);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentMonth = new Date().getMonth() + 1;\r\n        const currentYear = new Date().getFullYear();\r\n        GetTotalSale(3, 6, 2022);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper\r\n                    border={false}\r\n                    content={false}\r\n                    onClick={() => {\r\n                        dispatch({ type: SHOW_CURRENT_CHART, currentChart: 2 });\r\n                    }}\r\n                >\r\n                    <Box sx={{ p: 0 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            <LocalMallOutlinedIcon fontSize=\"inherit\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, true)}\r\n                                        >\r\n                                            Month\r\n                                        </Button>\r\n                                        <Button\r\n                                            disableElevation\r\n                                            variant={!timeValue ? 'contained' : 'text'}\r\n                                            size=\"small\"\r\n                                            sx={{ color: 'inherit' }}\r\n                                            onClick={(e) => handleChangeTime(e, false)}\r\n                                        >\r\n                                            Year\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={6}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                {timeValue ? (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        $108\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                        ${totalSale.toFixed(2)}\r\n                                                    </Typography>\r\n                                                )}\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                                </Avatar>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color: theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Total Sales\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        {/* {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />} */}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n"]},"metadata":{},"sourceType":"module"}