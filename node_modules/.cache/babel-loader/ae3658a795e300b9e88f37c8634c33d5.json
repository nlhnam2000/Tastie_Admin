{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Button, ButtonBase, CardActions, Chip, ClickAwayListener, Divider, Grid, Paper, Popper, Stack, TextField, Typography, useMediaQuery } from '@mui/material'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport Transitions from 'ui-component/extended/Transitions';\nimport NotificationList from './NotificationList'; // assets\n\nimport { IconBell } from '@tabler/icons'; // notification status options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'all',\n  label: 'All Notification'\n}, {\n  value: 'new',\n  label: 'New'\n}, {\n  value: 'unread',\n  label: 'Unread'\n}, {\n  value: 'other',\n  label: 'Other'\n}]; // ==============================|| NOTIFICATION ||============================== //\n\nconst NotificationSection = () => {\n  _s();\n\n  const theme = useTheme();\n  const matchesXs = useMediaQuery(theme.breakpoints.down('md'));\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  /**\r\n   * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n   * */\n\n  const anchorRef = useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const prevOpen = useRef(open);\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  const handleChange = event => {\n    if (event !== null && event !== void 0 && event.target.value) setValue(event === null || event === void 0 ? void 0 : event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ml: 2,\n        mr: 3,\n        [theme.breakpoints.down('md')]: {\n          mr: 2\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n        sx: {\n          borderRadius: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          sx: { ...theme.typography.commonAvatar,\n            ...theme.typography.mediumAvatar,\n            transition: 'all .2s ease-in-out',\n            background: theme.palette.secondary.light,\n            color: theme.palette.secondary.dark,\n            '&[aria-controls=\"menu-list-grow\"],&:hover': {\n              background: theme.palette.secondary.dark,\n              color: theme.palette.secondary.light\n            }\n          },\n          ref: anchorRef,\n          \"aria-controls\": open ? 'menu-list-grow' : undefined,\n          \"aria-haspopup\": \"true\",\n          onClick: handleToggle,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(IconBell, {\n            stroke: 1.5,\n            size: \"1.3rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      placement: matchesXs ? 'bottom' : 'bottom-end',\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [matchesXs ? 5 : 0, 20]\n          }\n        }]\n      },\n      children: _ref => {\n        let {\n          TransitionProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Transitions, {\n          position: matchesXs ? 'top' : 'top-right',\n          in: open,\n          ...TransitionProps,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MainCard, {\n                border: false,\n                elevation: 16,\n                content: false,\n                boxShadow: true,\n                shadow: theme.shadows[16],\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      sx: {\n                        pt: 2,\n                        px: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Stack, {\n                          direction: \"row\",\n                          spacing: 2,\n                          children: [/*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"subtitle1\",\n                            children: \"All Notification\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 154,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                            size: \"small\",\n                            label: \"01\",\n                            sx: {\n                              color: theme.palette.background.default,\n                              bgcolor: theme.palette.warning.dark\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 155,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          component: Link,\n                          to: \"#\",\n                          variant: \"subtitle2\",\n                          color: \"primary\",\n                          children: \"Mark as all read\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n                      style: {\n                        height: '100%',\n                        maxHeight: 'calc(100vh - 205px)',\n                        overflowX: 'hidden'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        direction: \"column\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            sx: {\n                              px: 2,\n                              pt: 0.25\n                            },\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              id: \"outlined-select-currency-native\",\n                              select: true,\n                              fullWidth: true,\n                              value: value,\n                              onChange: handleChange,\n                              SelectProps: {\n                                native: true\n                              },\n                              children: status.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: option.value,\n                                children: option.label\n                              }, option.value, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 190,\n                                columnNumber: 69\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 179,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 178,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          p: 0,\n                          children: /*#__PURE__*/_jsxDEV(Divider, {\n                            sx: {\n                              my: 0\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(NotificationList, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  sx: {\n                    p: 1.25,\n                    justifyContent: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    disableElevation: true,\n                    children: \"View All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationSection, \"Ao+S7zMlZJ+ClW22hKVKIj6OZAY=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = NotificationSection;\nexport default NotificationSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationSection\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_AdminDashboard/src/layout/MainLayout/Header/NotificationSection/index.js"],"names":["useState","useRef","useEffect","Link","useTheme","Avatar","Box","Button","ButtonBase","CardActions","Chip","ClickAwayListener","Divider","Grid","Paper","Popper","Stack","TextField","Typography","useMediaQuery","PerfectScrollbar","MainCard","Transitions","NotificationList","IconBell","status","value","label","NotificationSection","theme","matchesXs","breakpoints","down","open","setOpen","setValue","anchorRef","handleToggle","prevOpen","handleClose","event","current","contains","target","focus","handleChange","ml","mr","borderRadius","typography","commonAvatar","mediumAvatar","transition","background","palette","secondary","light","color","dark","undefined","modifiers","name","options","offset","TransitionProps","shadows","pt","px","default","bgcolor","warning","height","maxHeight","overflowX","native","map","option","my","p","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    ButtonBase,\r\n    CardActions,\r\n    Chip,\r\n    ClickAwayListener,\r\n    Divider,\r\n    Grid,\r\n    Paper,\r\n    Popper,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport NotificationList from './NotificationList';\r\n\r\n// assets\r\nimport { IconBell } from '@tabler/icons';\r\n\r\n// notification status options\r\nconst status = [\r\n    {\r\n        value: 'all',\r\n        label: 'All Notification'\r\n    },\r\n    {\r\n        value: 'new',\r\n        label: 'New'\r\n    },\r\n    {\r\n        value: 'unread',\r\n        label: 'Unread'\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'Other'\r\n    }\r\n];\r\n\r\n// ==============================|| NOTIFICATION ||============================== //\r\n\r\nconst NotificationSection = () => {\r\n    const theme = useTheme();\r\n    const matchesXs = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    /**\r\n     * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n     * */\r\n    const anchorRef = useRef(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const prevOpen = useRef(open);\r\n    useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    const handleChange = (event) => {\r\n        if (event?.target.value) setValue(event?.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                sx={{\r\n                    ml: 2,\r\n                    mr: 3,\r\n                    [theme.breakpoints.down('md')]: {\r\n                        mr: 2\r\n                    }\r\n                }}\r\n            >\r\n                <ButtonBase sx={{ borderRadius: '12px' }}>\r\n                    <Avatar\r\n                        variant=\"rounded\"\r\n                        sx={{\r\n                            ...theme.typography.commonAvatar,\r\n                            ...theme.typography.mediumAvatar,\r\n                            transition: 'all .2s ease-in-out',\r\n                            background: theme.palette.secondary.light,\r\n                            color: theme.palette.secondary.dark,\r\n                            '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                background: theme.palette.secondary.dark,\r\n                                color: theme.palette.secondary.light\r\n                            }\r\n                        }}\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleToggle}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <IconBell stroke={1.5} size=\"1.3rem\" />\r\n                    </Avatar>\r\n                </ButtonBase>\r\n            </Box>\r\n            <Popper\r\n                placement={matchesXs ? 'bottom' : 'bottom-end'}\r\n                open={open}\r\n                anchorEl={anchorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                popperOptions={{\r\n                    modifiers: [\r\n                        {\r\n                            name: 'offset',\r\n                            options: {\r\n                                offset: [matchesXs ? 5 : 0, 20]\r\n                            }\r\n                        }\r\n                    ]\r\n                }}\r\n            >\r\n                {({ TransitionProps }) => (\r\n                    <Transitions position={matchesXs ? 'top' : 'top-right'} in={open} {...TransitionProps}>\r\n                        <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                                    <Grid container direction=\"column\" spacing={2}>\r\n                                        <Grid item xs={12}>\r\n                                            <Grid container alignItems=\"center\" justifyContent=\"space-between\" sx={{ pt: 2, px: 2 }}>\r\n                                                <Grid item>\r\n                                                    <Stack direction=\"row\" spacing={2}>\r\n                                                        <Typography variant=\"subtitle1\">All Notification</Typography>\r\n                                                        <Chip\r\n                                                            size=\"small\"\r\n                                                            label=\"01\"\r\n                                                            sx={{\r\n                                                                color: theme.palette.background.default,\r\n                                                                bgcolor: theme.palette.warning.dark\r\n                                                            }}\r\n                                                        />\r\n                                                    </Stack>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Typography component={Link} to=\"#\" variant=\"subtitle2\" color=\"primary\">\r\n                                                        Mark as all read\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>\r\n                                            <PerfectScrollbar\r\n                                                style={{ height: '100%', maxHeight: 'calc(100vh - 205px)', overflowX: 'hidden' }}\r\n                                            >\r\n                                                <Grid container direction=\"column\" spacing={2}>\r\n                                                    <Grid item xs={12}>\r\n                                                        <Box sx={{ px: 2, pt: 0.25 }}>\r\n                                                            <TextField\r\n                                                                id=\"outlined-select-currency-native\"\r\n                                                                select\r\n                                                                fullWidth\r\n                                                                value={value}\r\n                                                                onChange={handleChange}\r\n                                                                SelectProps={{\r\n                                                                    native: true\r\n                                                                }}\r\n                                                            >\r\n                                                                {status.map((option) => (\r\n                                                                    <option key={option.value} value={option.value}>\r\n                                                                        {option.label}\r\n                                                                    </option>\r\n                                                                ))}\r\n                                                            </TextField>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} p={0}>\r\n                                                        <Divider sx={{ my: 0 }} />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <NotificationList />\r\n                                            </PerfectScrollbar>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Divider />\r\n                                    <CardActions sx={{ p: 1.25, justifyContent: 'center' }}>\r\n                                        <Button size=\"small\" disableElevation>\r\n                                            View All\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </MainCard>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Transitions>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotificationSection;\r\n"]},"metadata":{},"sourceType":"module"}