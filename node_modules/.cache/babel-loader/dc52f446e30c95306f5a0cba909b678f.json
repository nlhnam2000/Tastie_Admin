{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/utilities/UserList.js\",\n    _s = $RefreshSig$();\n\n// import React\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Link, Button, Dialog, DialogActions, DialogContentText, DialogTitle, DialogContent, Typography, FormControl, FormGroup, InputLabel, FormHelperText, Input } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { makeStyles } from '@mui/styles';\nimport MuiTypography from '@mui/material/Typography';\nimport { DataGrid } from '@mui/x-data-grid'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant';\nimport { userColumns } from 'assets/columns/gridData';\nimport { HOST_NAME } from 'config'; // import library\n\nimport axios from 'axios'; // ==============================|| TYPOGRAPHY ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIMIT = 100;\n\nconst UserList = () => {\n  _s();\n\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [openNotification, setOpenNotification] = useState(false);\n  const [formData, setFormData] = useState({\n    email: null,\n    password: null,\n    phone: null,\n    first_name: null,\n    last_name: null,\n    role: null\n  });\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [showRemoveButton, setShowRemoveButton] = useState(false);\n\n  const GetAllUser = async (offset, limit) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/get-all-user`, {\n        limit,\n        offset\n      }, config);\n\n      if (res.data.status) {\n        setRows(res.data.response.filter(item => item.user_status !== 2));\n      }\n    } catch (error) {\n      console.error('Cannot get all user', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddUser = async formData => {\n    try {\n      const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/add-user`, formData);\n\n      if (res.data.status) {\n        setOpenDialog(false);\n        setOpenNotification(true); // await GetAllUser(1, 1000000);\n      }\n    } catch (error) {\n      console.error('Cannot add new user', error);\n    }\n  };\n\n  const handleRemoveUser = async userIdList => {\n    // this function get the array of user_id to be removed => remove multiple users\n    try {\n      const removeUser = async userId => {\n        const res = await axios.put(`http://${HOST_NAME}:3010/v1/api/tastie/admin/remove-user/${userId}`);\n        return res.data;\n      };\n\n      const queryList = [];\n      userIdList.forEach(userId => {\n        queryList.push(removeUser(userId)); // get the query list of removing users\n      });\n      Promise.all(queryList).then(values => {\n        console.log('Response from removing users', values);\n        GetAllUser(1, 10000000); // reload the screen with new data\n      });\n    } catch (error) {\n      console.error('Cannot remove users', error);\n    }\n  };\n\n  useEffect(() => {\n    GetAllUser(1, 100);\n  }, []);\n  useEffect(() => {\n    setShowRemoveButton(selectedUser.length > 0);\n  }, [selectedUser]);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"User list\",\n    secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showRemoveButton && /*#__PURE__*/_jsxDEV(Button, {\n        disableElevation: true,\n        variant: \"contained\",\n        onClick: () => handleRemoveUser(selectedUser),\n        sx: {\n          marginRight: 2,\n          color: 'white'\n        },\n        color: \"error\",\n        children: \"Remove User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disableElevation: true,\n        variant: \"contained\",\n        onClick: () => setOpenDialog(true),\n        sx: {\n          color: 'white'\n        },\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true),\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      initialState: {\n        sorting: {\n          sortModel: [{\n            field: 'user_id',\n            sort: 'asc'\n          }] // set descending order as default\n\n        }\n      },\n      loading: loading,\n      rows: rows,\n      columns: userColumns,\n      checkboxSelection: true,\n      disableSelectionOnClick: true,\n      getRowId: row => row.user_id,\n      sx: {\n        width: '100%',\n        height: '70vh'\n      },\n      onPageChange: async page => {\n        setLoading(true);\n        await GetAllUser(page * 100 + 1, LIMIT);\n      },\n      onSelectionModelChange: (userIdList, _) => {\n        console.log(userIdList);\n        setSelectedUser(userIdList);\n      },\n      pageSize: 100,\n      paginationMode: \"server\",\n      rowCount: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        sx: {\n          width: '100%',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Add new User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          sx: {\n            marginRight: 20\n          },\n          children: \"Please enter all these required information for the new user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            width: '100%',\n            py: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            sx: {\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-around'\n            },\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email\",\n                \"aria-describedby\": \"my-helper-text\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: event.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password\",\n                \"aria-describedby\": \"my-helper-text\",\n                type: \"password\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: event.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            sx: {\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-around',\n              marginTop: 5\n            },\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"phone\",\n                children: \"Phone number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"phone\",\n                \"aria-describedby\": \"my-helper-text\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: parseFloat(event.target.value)\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"first_name\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"first_name\",\n                \"aria-describedby\": \"my-helper-text\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: event.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            sx: {\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'space-around',\n              marginTop: 5\n            },\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"last_name\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"last_name\",\n                \"aria-describedby\": \"my-helper-text\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: event.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                width: '40%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"role\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"role\",\n                \"aria-describedby\": \"my-helper-text\",\n                onChange: event => setFormData(prev => ({ ...prev,\n                  [event.target.id]: parseFloat(event.target.value)\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleAddUser(formData),\n          autoFocus: true,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openNotification,\n      onClose: () => setOpenNotification(false),\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Add new user successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"The new user has been added in the database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setOpenDialog(false);\n            GetAllUser(1, 1000000);\n          },\n          children: \"Got it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"vMtSzbsopZuU1cpv/IHYPcGBQmY=\", false, function () {\n  return [useTheme];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/utilities/UserList.js"],"names":["React","useEffect","useState","Grid","Link","Button","Dialog","DialogActions","DialogContentText","DialogTitle","DialogContent","Typography","FormControl","FormGroup","InputLabel","FormHelperText","Input","useTheme","makeStyles","MuiTypography","DataGrid","SubCard","MainCard","SecondaryAction","gridSpacing","userColumns","HOST_NAME","axios","LIMIT","UserList","theme","loading","setLoading","rows","setRows","openDialog","setOpenDialog","openNotification","setOpenNotification","formData","setFormData","email","password","phone","first_name","last_name","role","selectedUser","setSelectedUser","showRemoveButton","setShowRemoveButton","GetAllUser","offset","limit","config","headers","res","post","data","status","response","filter","item","user_status","error","console","handleAddUser","handleRemoveUser","userIdList","removeUser","userId","put","queryList","forEach","push","Promise","all","then","values","log","length","marginRight","color","sorting","sortModel","field","sort","row","user_id","width","height","page","_","alignItems","py","display","flexDirection","justifyContent","event","prev","target","id","value","marginTop","parseFloat"],"mappings":"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","sourcesContent":["// import React\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Link,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Typography,\r\n    FormControl,\r\n    FormGroup,\r\n    InputLabel,\r\n    FormHelperText,\r\n    Input\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { makeStyles } from '@mui/styles';\r\nimport MuiTypography from '@mui/material/Typography';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { userColumns } from 'assets/columns/gridData';\r\nimport { HOST_NAME } from 'config';\r\n\r\n// import library\r\nimport axios from 'axios';\r\n\r\n// ==============================|| TYPOGRAPHY ||============================== //\r\n\r\nconst LIMIT = 100;\r\n\r\nconst UserList = () => {\r\n    const theme = useTheme();\r\n    const [loading, setLoading] = useState(true);\r\n    const [rows, setRows] = useState([]);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openNotification, setOpenNotification] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: null,\r\n        password: null,\r\n        phone: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        role: null\r\n    });\r\n    const [selectedUser, setSelectedUser] = useState([]);\r\n    const [showRemoveButton, setShowRemoveButton] = useState(false);\r\n\r\n    const GetAllUser = async (offset, limit) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const res = await axios.post(\r\n                `http://${HOST_NAME}:3010/v1/api/tastie/admin/get-all-user`,\r\n                {\r\n                    limit,\r\n                    offset\r\n                },\r\n                config\r\n            );\r\n\r\n            if (res.data.status) {\r\n                setRows(res.data.response.filter((item) => item.user_status !== 2));\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot get all user', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddUser = async (formData) => {\r\n        try {\r\n            const res = await axios.post(`http://${HOST_NAME}:3010/v1/api/tastie/admin/add-user`, formData);\r\n            if (res.data.status) {\r\n                setOpenDialog(false);\r\n                setOpenNotification(true);\r\n                // await GetAllUser(1, 1000000);\r\n            }\r\n        } catch (error) {\r\n            console.error('Cannot add new user', error);\r\n        }\r\n    };\r\n\r\n    const handleRemoveUser = async (userIdList) => {\r\n        // this function get the array of user_id to be removed => remove multiple users\r\n        try {\r\n            const removeUser = async (userId) => {\r\n                const res = await axios.put(`http://${HOST_NAME}:3010/v1/api/tastie/admin/remove-user/${userId}`);\r\n\r\n                return res.data;\r\n            };\r\n            const queryList = [];\r\n            userIdList.forEach((userId) => {\r\n                queryList.push(removeUser(userId)); // get the query list of removing users\r\n            });\r\n            Promise.all(queryList).then((values) => {\r\n                console.log('Response from removing users', values);\r\n                GetAllUser(1, 10000000); // reload the screen with new data\r\n            });\r\n        } catch (error) {\r\n            console.error('Cannot remove users', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        GetAllUser(1, 100);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setShowRemoveButton(selectedUser.length > 0);\r\n    }, [selectedUser]);\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"User list\"\r\n            secondary={\r\n                <>\r\n                    {showRemoveButton && (\r\n                        <Button\r\n                            disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={() => handleRemoveUser(selectedUser)}\r\n                            sx={{\r\n                                marginRight: 2,\r\n                                color: 'white'\r\n                            }}\r\n                            color=\"error\"\r\n                        >\r\n                            Remove User\r\n                        </Button>\r\n                    )}\r\n                    <Button disableElevation variant=\"contained\" onClick={() => setOpenDialog(true)} sx={{ color: 'white' }}>\r\n                        Add User\r\n                    </Button>\r\n                </>\r\n            }\r\n        >\r\n            <DataGrid\r\n                initialState={{\r\n                    sorting: {\r\n                        sortModel: [{ field: 'user_id', sort: 'asc' }] // set descending order as default\r\n                    }\r\n                }}\r\n                loading={loading}\r\n                rows={rows}\r\n                columns={userColumns}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                getRowId={(row) => row.user_id}\r\n                sx={{ width: '100%', height: '70vh' }}\r\n                onPageChange={async (page) => {\r\n                    setLoading(true);\r\n                    await GetAllUser(page * 100 + 1, LIMIT);\r\n                }}\r\n                onSelectionModelChange={(userIdList, _) => {\r\n                    console.log(userIdList);\r\n                    setSelectedUser(userIdList);\r\n                }}\r\n                pageSize={100}\r\n                paginationMode=\"server\"\r\n                rowCount={200}\r\n            />\r\n            <Dialog\r\n                open={openDialog}\r\n                onClose={() => setOpenDialog(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\" sx={{ width: '100%', alignItems: 'center' }}>\r\n                    <Typography variant=\"h3\">Add new User</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\" sx={{ marginRight: 20 }}>\r\n                        Please enter all these required information for the new user\r\n                    </DialogContentText>\r\n                    <FormControl sx={{ width: '100%', py: 2 }}>\r\n                        <FormGroup\r\n                            sx={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-around'\r\n                            }}\r\n                            row\r\n                        >\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: event.target.value\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    type=\"password\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: event.target.value\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup\r\n                            sx={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-around',\r\n                                marginTop: 5\r\n                            }}\r\n                            row\r\n                        >\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"phone\">Phone number</InputLabel>\r\n                                <Input\r\n                                    id=\"phone\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: parseFloat(event.target.value)\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"first_name\">First Name</InputLabel>\r\n                                <Input\r\n                                    id=\"first_name\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: event.target.value\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup\r\n                            sx={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'space-around',\r\n                                marginTop: 5\r\n                            }}\r\n                            row\r\n                        >\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"last_name\">Last Name</InputLabel>\r\n                                <Input\r\n                                    id=\"last_name\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: event.target.value\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl sx={{ width: '40%' }}>\r\n                                <InputLabel htmlFor=\"role\">Role</InputLabel>\r\n                                <Input\r\n                                    id=\"role\"\r\n                                    aria-describedby=\"my-helper-text\"\r\n                                    onChange={(event) =>\r\n                                        setFormData((prev) => ({\r\n                                            ...prev,\r\n                                            [event.target.id]: parseFloat(event.target.value)\r\n                                        }))\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </FormGroup>\r\n\r\n                        {/* <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{ margin: 'auto', marginTop: 10 }}\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    handleAddEcoupon(formData);\r\n                                }}\r\n                            >\r\n                                Add Ecoupon\r\n                            </Button> */}\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\r\n                    <Button onClick={() => handleAddUser(formData)} autoFocus>\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Notification dialog */}\r\n            <Dialog\r\n                open={openNotification}\r\n                onClose={() => setOpenNotification(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Add new user successfully</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">The new user has been added in the database</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setOpenDialog(false);\r\n                            GetAllUser(1, 1000000);\r\n                        }}\r\n                    >\r\n                        Got it\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}