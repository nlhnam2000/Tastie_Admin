{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/sample-page/index.js\";\nimport React, { useEffect, useState } from 'react'; // material-ui\n// import { Typography } from '@mui/material';\n\nimport { DataGrid } from '@mui/x-data-grid'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard'; // libraries\n\nimport axios from 'axios'; // ==============================|| SAMPLE PAGE ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'user_id',\n  headerName: 'User ID',\n  width: 100\n}, {\n  field: 'first_name',\n  headerName: 'First Name',\n  width: 100,\n  editable: true\n}, {\n  field: 'last_name',\n  headerName: 'Last Name',\n  width: 100,\n  editable: true\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  width: 100,\n  editable: true\n}, {\n  field: 'birthday',\n  headerName: 'Birthday',\n  width: 100,\n  editable: true\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 100,\n  editable: true\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  width: 100,\n  editable: true\n}, {\n  field: 'password',\n  headerName: 'Password',\n  width: 100,\n  editable: true\n}, {\n  field: 'role',\n  headerName: 'Role',\n  width: 100,\n  editable: true\n}, {\n  field: 'user_token',\n  headerName: 'User Token',\n  width: 100,\n  editable: true\n}, {\n  field: 'register_at',\n  headerName: 'Register at',\n  width: 100,\n  editable: true\n}, {\n  field: 'update_at',\n  headerName: 'Update at',\n  width: 100,\n  editable: true\n}, {\n  field: 'delete_at',\n  headerName: 'Delete at',\n  width: 100,\n  editable: true\n}, {\n  field: 'avatar',\n  headerName: 'Avatar',\n  width: 100,\n  editable: true\n}];\nconst rows = [{\n  user_id: 1,\n  first_name: 'John',\n  last_name: 'Doe',\n  gender: 'Male',\n  birthday: '20/02/2000',\n  email: 'johndoe@gmail.com',\n  phone: 1234567890,\n  password: 'ioasudfhbiawuehfioawusdfcqwefq',\n  role: 3,\n  user_token: 'ajshkdfquiawyebgquiwyebgqu',\n  register_at: '20/02/2022',\n  update_at: null,\n  delete_at: null,\n  avatar: 'https://localhost:3000/avatar.png'\n}, {\n  user_id: 2,\n  first_name: 'John',\n  last_name: 'Doe',\n  gender: 'Male',\n  birthday: '20/02/2000',\n  email: 'johndoe@gmail.com',\n  phone: 1234567890,\n  password: 'ioasudfhbiawuehfioawusdfcqwefq',\n  role: 3,\n  user_token: 'ajshkdfquiawyebgquiwyebgqu',\n  register_at: '20/02/2022',\n  update_at: null,\n  delete_at: null,\n  avatar: 'https://localhost:3000/avatar.png'\n}];\n\nconst SamplePage = () => {\n  // const [rows, setRows] = useState([]);\n  // const GetAllUser = async (offset, limit) => {\n  //     try {\n  //         const config = {\n  //             headers: {\n  //                 'Content-Type': 'application/json'\n  //             }\n  //         };\n  //         const res = await axios.post(\n  //             'http://localhost:3010/v1/api/tastie/admin/get-all-user',\n  //             {\n  //                 limit,\n  //                 offset\n  //             },\n  //             config\n  //         );\n  //         if (res.data.status) {\n  //             setRows(res.data.response);\n  //         }\n  //     } catch (error) {\n  //         console.error('Cannot get all user', error);\n  //     }\n  // };\n  // useEffect(() => {\n  //     GetAllUser(1, 20);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"User list\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true,\n      disableSelectionOnClick: true,\n      getRowId: row => row.user_id,\n      sx: {\n        width: '100%',\n        height: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SamplePage;\nexport default SamplePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SamplePage\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/sample-page/index.js"],"names":["React","useEffect","useState","DataGrid","MainCard","axios","columns","field","headerName","width","editable","rows","user_id","first_name","last_name","gender","birthday","email","phone","password","role","user_token","register_at","update_at","delete_at","avatar","SamplePage","row","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\n// import { Typography } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// libraries\r\nimport axios from 'axios';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst columns = [\r\n    { field: 'user_id', headerName: 'User ID', width: 100 },\r\n    { field: 'first_name', headerName: 'First Name', width: 100, editable: true },\r\n    { field: 'last_name', headerName: 'Last Name', width: 100, editable: true },\r\n    { field: 'gender', headerName: 'Gender', width: 100, editable: true },\r\n    { field: 'birthday', headerName: 'Birthday', width: 100, editable: true },\r\n    { field: 'email', headerName: 'Email', width: 100, editable: true },\r\n    { field: 'phone', headerName: 'Phone', width: 100, editable: true },\r\n    { field: 'password', headerName: 'Password', width: 100, editable: true },\r\n    { field: 'role', headerName: 'Role', width: 100, editable: true },\r\n    { field: 'user_token', headerName: 'User Token', width: 100, editable: true },\r\n    { field: 'register_at', headerName: 'Register at', width: 100, editable: true },\r\n    { field: 'update_at', headerName: 'Update at', width: 100, editable: true },\r\n    { field: 'delete_at', headerName: 'Delete at', width: 100, editable: true },\r\n    { field: 'avatar', headerName: 'Avatar', width: 100, editable: true }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        user_id: 1,\r\n        first_name: 'John',\r\n        last_name: 'Doe',\r\n        gender: 'Male',\r\n        birthday: '20/02/2000',\r\n        email: 'johndoe@gmail.com',\r\n        phone: 1234567890,\r\n        password: 'ioasudfhbiawuehfioawusdfcqwefq',\r\n        role: 3,\r\n        user_token: 'ajshkdfquiawyebgquiwyebgqu',\r\n        register_at: '20/02/2022',\r\n        update_at: null,\r\n        delete_at: null,\r\n        avatar: 'https://localhost:3000/avatar.png'\r\n    },\r\n    {\r\n        user_id: 2,\r\n        first_name: 'John',\r\n        last_name: 'Doe',\r\n        gender: 'Male',\r\n        birthday: '20/02/2000',\r\n        email: 'johndoe@gmail.com',\r\n        phone: 1234567890,\r\n        password: 'ioasudfhbiawuehfioawusdfcqwefq',\r\n        role: 3,\r\n        user_token: 'ajshkdfquiawyebgquiwyebgqu',\r\n        register_at: '20/02/2022',\r\n        update_at: null,\r\n        delete_at: null,\r\n        avatar: 'https://localhost:3000/avatar.png'\r\n    }\r\n];\r\n\r\nconst SamplePage = () => {\r\n    // const [rows, setRows] = useState([]);\r\n\r\n    // const GetAllUser = async (offset, limit) => {\r\n    //     try {\r\n    //         const config = {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             }\r\n    //         };\r\n    //         const res = await axios.post(\r\n    //             'http://localhost:3010/v1/api/tastie/admin/get-all-user',\r\n    //             {\r\n    //                 limit,\r\n    //                 offset\r\n    //             },\r\n    //             config\r\n    //         );\r\n\r\n    //         if (res.data.status) {\r\n    //             setRows(res.data.response);\r\n    //         }\r\n    //     } catch (error) {\r\n    //         console.error('Cannot get all user', error);\r\n    //     }\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     GetAllUser(1, 20);\r\n    // }, []);\r\n\r\n    return (\r\n        <MainCard title=\"User list\">\r\n            {/* <Typography variant=\"body2\">\r\n            Lorem ipsum dolor sit amen, consenter nipissing eli, sed do elusion tempos incident ut laborers et doolie magna alissa. Ut enif\r\n            ad minim venice, quin nostrum exercitation illampu laborings nisi ut liquid ex ea commons construal. Duos aube grue dolor in\r\n            reprehended in voltage veil esse colum doolie eu fujian bulla parian. Exceptive sin ocean cuspidate non president, sunk in culpa\r\n            qui officiate descent molls anim id est labours.\r\n        </Typography> */}\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                getRowId={(row) => row.user_id}\r\n                sx={{ width: '100%', height: 400 }}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n"]},"metadata":{},"sourceType":"module"}