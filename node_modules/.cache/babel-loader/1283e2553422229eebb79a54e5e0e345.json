{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/TopSaleCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material'; // project imports\n\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined'; // library\n\nimport axios from 'axios'; // ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TopSaleCard = _ref => {\n  _s();\n\n  let {\n    isLoading\n  } = _ref;\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [ranking, setRanking] = useState([]);\n  const [differences, setDifferences] = useState([{\n    state: 'Profit',\n    difference: 0\n  }]);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const sortByMonth = async () => {\n    try {\n      const currentMonth = new Date().getMonth() + 1;\n      const currentYear = new Date().getFullYear();\n\n      const getCurrentMonthRevenue = async () => {\n        const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n          start_month: currentMonth,\n          end_month: currentMonth,\n          year: currentYear,\n          limit: 20\n        });\n        return res.data.response;\n      };\n\n      const getPreviousMonthRevenue = async () => {\n        const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n          start_month: currentMonth - 1,\n          end_month: currentMonth - 1,\n          year: currentYear,\n          limit: 20\n        });\n        return res.data.response;\n      };\n\n      const res1 = getCurrentMonthRevenue();\n      const res2 = getPreviousMonthRevenue();\n      Promise.all([res1, res2]).then(values => {\n        setRanking(values[0]);\n\n        if (values[1].length > 0) {\n          setDifferences(values[0].map((value, index) => ({\n            state: value.revenue > values[1][index].revenue ? 'Profit' : 'Loss',\n            difference: Math.abs(value.revenue - values[1][index].revenue)\n          })));\n        } else {\n          setDifferences(values[0].map((value, index) => ({\n            state: 'Profit',\n            difference: parseFloat(value.revenue.toFixed(2))\n          })));\n        }\n      }); // if (res.data.status) {\n      //     setRanking(res.data.response);\n      // }\n    } catch (error) {\n      console.error('Cannot sort by month', error);\n    } finally {\n      console.log(differences);\n    }\n  };\n\n  const sortByYear = async () => {\n    try {\n      const currentYear = new Date().getFullYear();\n      const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n        start_month: 1,\n        end_month: 12,\n        year: currentYear,\n        limit: 20\n      });\n\n      if (res.data.status) {\n        setRanking(res.data.response);\n      }\n    } catch (error) {\n      console.error('Cannot sort by month', error);\n    } finally {\n      setAnchorEl(null);\n    }\n  };\n\n  const LoadSaleRanking = async (startMonth, endMonth, year, limit) => {\n    try {\n      const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-sales', {\n        start_month: startMonth,\n        end_month: endMonth,\n        year,\n        limit\n      });\n\n      if (res.data.status) {\n        setRanking(res.data.response);\n      }\n    } catch (error) {\n      console.error('Cannot get top sale', error);\n    } finally {\n      setAnchorEl(null);\n    }\n  };\n\n  useEffect(() => {\n    LoadSaleRanking(3, 6, 2022, 20); // sortByMonth();\n    // sortByYear();\n\n    return () => {\n      setRanking([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonPopularCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MainCard, {\n      content: false,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignContent: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: \"Top Sale\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(MoreHorizOutlinedIcon, {\n                  fontSize: \"small\",\n                  sx: {\n                    color: theme.palette.primary[200],\n                    cursor: 'pointer'\n                  },\n                  \"aria-controls\": \"menu-popular-card\",\n                  \"aria-haspopup\": \"true\",\n                  onClick: handleClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                  id: \"menu-popular-card\",\n                  anchorEl: anchorEl,\n                  keepMounted: true,\n                  open: Boolean(anchorEl),\n                  onClose: handleClose,\n                  variant: \"selectedMenu\",\n                  anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  },\n                  transformOrigin: {\n                    vertical: 'top',\n                    horizontal: 'right'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleClose,\n                    children: \" Today\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: () => sortByMonth(),\n                    children: \" This Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: () => sortByYear(),\n                    children: \" This Year \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              pt: '16px !important'\n            },\n            children: /*#__PURE__*/_jsxDEV(BajajAreaChartCard, {\n              merchantName: ranking.length > 0 ? ranking[0].merchant_name : 'Unknown',\n              revenu: ranking.length > 0 ? ranking[0].num_sales : 0.0,\n              revenueList: [{\n                data: ranking.map(r => r.num_sales)\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: ranking.map((item, index) => {\n              var _item$merchant_name, _item$num_sales, _differences$index, _differences$index2, _differences$index3;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle1\",\n                          color: \"inherit\",\n                          sx: {\n                            fontSize: 'small'\n                          },\n                          children: [index + 1, \". \", (_item$merchant_name = item.merchant_name) !== null && _item$merchant_name !== void 0 ? _item$merchant_name : 'Unknown']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle1\",\n                              color: \"inherit\",\n                              children: [(_item$num_sales = item.num_sales) !== null && _item$num_sales !== void 0 ? _item$num_sales : 0, \" sales\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 217,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 61\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              sx: {\n                                width: 16,\n                                height: 16,\n                                borderRadius: '5px',\n                                backgroundColor: theme.palette.success.light,\n                                color: theme.palette.success.dark,\n                                ml: 2\n                              },\n                              children: /*#__PURE__*/_jsxDEV(KeyboardArrowUpOutlinedIcon, {\n                                fontSize: \"small\",\n                                color: \"inherit\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 233,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 222,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 61\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 215,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: ((_differences$index = differences[index]) === null || _differences$index === void 0 ? void 0 : _differences$index.state) === 'Profit' ? 'success.dark' : theme.palette.orange.dark\n                      },\n                      children: [\"$\", (_differences$index2 = differences[index]) === null || _differences$index2 === void 0 ? void 0 : _differences$index2.difference, \" \", (_differences$index3 = differences[index]) === null || _differences$index3 === void 0 ? void 0 : _differences$index3.state]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 1.5\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          p: 1.25,\n          pt: 0,\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          disableElevation: true,\n          children: [\"View All\", /*#__PURE__*/_jsxDEV(ChevronRightOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TopSaleCard, \"SumU0TnnhPl06HMdGSytCaEfR90=\", false, function () {\n  return [useTheme];\n});\n\n_c = TopSaleCard;\nTopSaleCard.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TopSaleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopSaleCard\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/dashboard/Default/TopSaleCard.js"],"names":["React","useEffect","useState","PropTypes","useTheme","Avatar","Button","CardActions","CardContent","Divider","Grid","Menu","MenuItem","Typography","BajajAreaChartCard","MainCard","SkeletonPopularCard","gridSpacing","ChevronRightOutlinedIcon","MoreHorizOutlinedIcon","KeyboardArrowUpOutlinedIcon","KeyboardArrowDownOutlinedIcon","axios","TopSaleCard","isLoading","theme","anchorEl","setAnchorEl","ranking","setRanking","differences","setDifferences","state","difference","handleClick","event","currentTarget","handleClose","sortByMonth","currentMonth","Date","getMonth","currentYear","getFullYear","getCurrentMonthRevenue","res","post","start_month","end_month","year","limit","data","response","getPreviousMonthRevenue","res1","res2","Promise","all","then","values","length","map","value","index","revenue","Math","abs","parseFloat","toFixed","error","console","log","sortByYear","status","LoadSaleRanking","startMonth","endMonth","color","palette","primary","cursor","Boolean","vertical","horizontal","pt","merchant_name","num_sales","r","item","fontSize","width","height","borderRadius","backgroundColor","success","light","dark","ml","orange","my","p","justifyContent","propTypes","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\n\n// library\nimport axios from 'axios';\n\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\n\nconst TopSaleCard = ({ isLoading }) => {\n    const theme = useTheme();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [ranking, setRanking] = useState([]);\n    const [differences, setDifferences] = useState([\n        {\n            state: 'Profit',\n            difference: 0\n        }\n    ]);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const sortByMonth = async () => {\n        try {\n            const currentMonth = new Date().getMonth() + 1;\n            const currentYear = new Date().getFullYear();\n\n            const getCurrentMonthRevenue = async () => {\n                const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n                    start_month: currentMonth,\n                    end_month: currentMonth,\n                    year: currentYear,\n                    limit: 20\n                });\n\n                return res.data.response;\n            };\n            const getPreviousMonthRevenue = async () => {\n                const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n                    start_month: currentMonth - 1,\n                    end_month: currentMonth - 1,\n                    year: currentYear,\n                    limit: 20\n                });\n\n                return res.data.response;\n            };\n            const res1 = getCurrentMonthRevenue();\n            const res2 = getPreviousMonthRevenue();\n\n            Promise.all([res1, res2]).then((values) => {\n                setRanking(values[0]);\n                if (values[1].length > 0) {\n                    setDifferences(\n                        values[0].map((value, index) => ({\n                            state: value.revenue > values[1][index].revenue ? 'Profit' : 'Loss',\n                            difference: Math.abs(value.revenue - values[1][index].revenue)\n                        }))\n                    );\n                } else {\n                    setDifferences(\n                        values[0].map((value, index) => ({\n                            state: 'Profit',\n                            difference: parseFloat(value.revenue.toFixed(2))\n                        }))\n                    );\n                }\n            });\n\n            // if (res.data.status) {\n            //     setRanking(res.data.response);\n            // }\n        } catch (error) {\n            console.error('Cannot sort by month', error);\n        } finally {\n            console.log(differences);\n        }\n    };\n\n    const sortByYear = async () => {\n        try {\n            const currentYear = new Date().getFullYear();\n            const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-revenue', {\n                start_month: 1,\n                end_month: 12,\n                year: currentYear,\n                limit: 20\n            });\n            if (res.data.status) {\n                setRanking(res.data.response);\n            }\n        } catch (error) {\n            console.error('Cannot sort by month', error);\n        } finally {\n            setAnchorEl(null);\n        }\n    };\n\n    const LoadSaleRanking = async (startMonth, endMonth, year, limit) => {\n        try {\n            const res = await axios.post('http://HOST_NAME:3010/v1/api/tastie/admin/get-top-provider-by-sales', {\n                start_month: startMonth,\n                end_month: endMonth,\n                year,\n                limit\n            });\n            if (res.data.status) {\n                setRanking(res.data.response);\n            }\n        } catch (error) {\n            console.error('Cannot get top sale', error);\n        } finally {\n            setAnchorEl(null);\n        }\n    };\n\n    useEffect(() => {\n        LoadSaleRanking(3, 6, 2022, 20);\n        // sortByMonth();\n        // sortByYear();\n        return () => {\n            setRanking([]);\n        };\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Top Sale</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            sx={{\n                                                color: theme.palette.primary[200],\n                                                cursor: 'pointer'\n                                            }}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={() => sortByMonth()}> This Month</MenuItem>\n                                            <MenuItem onClick={() => sortByYear()}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard\n                                    merchantName={ranking.length > 0 ? ranking[0].merchant_name : 'Unknown'}\n                                    revenu={ranking.length > 0 ? ranking[0].num_sales : 0.0}\n                                    revenueList={[{ data: ranking.map((r) => r.num_sales) }]}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                {ranking.map((item, index) => (\n                                    <div key={index}>\n                                        <Grid container direction=\"column\">\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\" sx={{ fontSize: 'small' }}>\n                                                            {index + 1}. {item.merchant_name ?? 'Unknown'}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                            <Grid item>\n                                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                                    {item.num_sales ?? 0} sales\n                                                                </Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Avatar\n                                                                    variant=\"rounded\"\n                                                                    sx={{\n                                                                        width: 16,\n                                                                        height: 16,\n                                                                        borderRadius: '5px',\n                                                                        backgroundColor: theme.palette.success.light,\n                                                                        color: theme.palette.success.dark,\n                                                                        ml: 2\n                                                                    }}\n                                                                >\n                                                                    <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                                </Avatar>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography\n                                                    variant=\"subtitle2\"\n                                                    sx={{\n                                                        color:\n                                                            differences[index]?.state === 'Profit'\n                                                                ? 'success.dark'\n                                                                : theme.palette.orange.dark\n                                                    }}\n                                                >\n                                                    ${differences[index]?.difference} {differences[index]?.state}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                        <Divider sx={{ my: 1.5 }} />\n                                    </div>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions sx={{ p: 1.25, pt: 0, justifyContent: 'center' }}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nTopSaleCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TopSaleCard;\n"]},"metadata":{},"sourceType":"module"}