{"ast":null,"code":"var _jsxFileName = \"/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/utilities/Typography.js\",\n    _s = $RefreshSig$();\n\n// import React\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Link } from '@mui/material';\nimport MuiTypography from '@mui/material/Typography';\nimport { DataGrid } from '@mui/x-data-grid'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport MainCard from 'ui-component/cards/MainCard';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { gridSpacing } from 'store/constant'; // import library\n\nimport axios from 'axios'; // ==============================|| TYPOGRAPHY ||============================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'user_id',\n  headerName: 'User ID',\n  width: 100\n}, {\n  field: 'first_name',\n  headerName: 'First Name',\n  width: 100,\n  editable: true\n}, {\n  field: 'last_name',\n  headerName: 'Last Name',\n  width: 100,\n  editable: true\n}, {\n  field: 'gender',\n  headerName: 'Gender',\n  width: 100,\n  editable: true\n}, {\n  field: 'birthday',\n  headerName: 'Birthday',\n  width: 100,\n  editable: true\n}, {\n  field: 'email',\n  headerName: 'Email',\n  width: 100,\n  editable: true\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  width: 100,\n  editable: true\n}, {\n  field: 'password',\n  headerName: 'Password',\n  width: 100,\n  editable: true\n}, {\n  field: 'role',\n  headerName: 'Role',\n  width: 100,\n  editable: true\n}, {\n  field: 'user_token',\n  headerName: 'User Token',\n  width: 100,\n  editable: true\n}, {\n  field: 'register_at',\n  headerName: 'Register at',\n  width: 100,\n  editable: true\n}, {\n  field: 'update_at',\n  headerName: 'Update at',\n  width: 100,\n  editable: true\n}, {\n  field: 'delete_at',\n  headerName: 'Delete at',\n  width: 100,\n  editable: true\n}, {\n  field: 'avatar',\n  headerName: 'Avatar',\n  width: 100,\n  editable: true\n}];\n\nconst UserList = () => {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    const GetAllUser = async (offset, limit) => {\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        const res = await axios.post('http://localhost:3010/v1/api/tastie/admin/get-all-user', {\n          limit,\n          offset\n        }, config);\n\n        if (res.data.status) {\n          setRows(res.data.response);\n        }\n      } catch (error) {\n        console.error('Cannot get all user', error);\n      }\n    };\n\n    GetAllUser(1, 39130);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"User list\",\n    secondary: /*#__PURE__*/_jsxDEV(SecondaryAction, {\n      link: \"https://next.material-ui.com/system/typography/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 48\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 50 // rowsPerPageOptions={[40]}\n      ,\n      checkboxSelection: true,\n      disableSelectionOnClick: true,\n      getRowId: row => row.user_id,\n      sx: {\n        width: '100%',\n        height: 500\n      } // onPageChange={(page) => alert(page)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = UserList;\nexport default Typography;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/hoangnam/4thYear/FinalProject/Tastie_Admin/src/views/utilities/Typography.js"],"names":["React","useEffect","useState","Grid","Link","MuiTypography","DataGrid","SubCard","MainCard","SecondaryAction","gridSpacing","axios","columns","field","headerName","width","editable","UserList","rows","setRows","GetAllUser","offset","limit","config","headers","res","post","data","status","response","error","console","row","user_id","height","Typography"],"mappings":"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","sourcesContent":["// import React\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { Grid, Link } from '@mui/material';\r\nimport MuiTypography from '@mui/material/Typography';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// import library\r\nimport axios from 'axios';\r\n\r\n// ==============================|| TYPOGRAPHY ||============================== //\r\n\r\nconst columns = [\r\n    { field: 'user_id', headerName: 'User ID', width: 100 },\r\n    { field: 'first_name', headerName: 'First Name', width: 100, editable: true },\r\n    { field: 'last_name', headerName: 'Last Name', width: 100, editable: true },\r\n    { field: 'gender', headerName: 'Gender', width: 100, editable: true },\r\n    { field: 'birthday', headerName: 'Birthday', width: 100, editable: true },\r\n    { field: 'email', headerName: 'Email', width: 100, editable: true },\r\n    { field: 'phone', headerName: 'Phone', width: 100, editable: true },\r\n    { field: 'password', headerName: 'Password', width: 100, editable: true },\r\n    { field: 'role', headerName: 'Role', width: 100, editable: true },\r\n    { field: 'user_token', headerName: 'User Token', width: 100, editable: true },\r\n    { field: 'register_at', headerName: 'Register at', width: 100, editable: true },\r\n    { field: 'update_at', headerName: 'Update at', width: 100, editable: true },\r\n    { field: 'delete_at', headerName: 'Delete at', width: 100, editable: true },\r\n    { field: 'avatar', headerName: 'Avatar', width: 100, editable: true }\r\n];\r\n\r\nconst UserList = () => {\r\n    const [rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const GetAllUser = async (offset, limit) => {\r\n            try {\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                };\r\n                const res = await axios.post(\r\n                    'http://localhost:3010/v1/api/tastie/admin/get-all-user',\r\n                    {\r\n                        limit,\r\n                        offset\r\n                    },\r\n                    config\r\n                );\r\n\r\n                if (res.data.status) {\r\n                    setRows(res.data.response);\r\n                }\r\n            } catch (error) {\r\n                console.error('Cannot get all user', error);\r\n            }\r\n        };\r\n\r\n        GetAllUser(1, 39130);\r\n    }, []);\r\n\r\n    return (\r\n        <MainCard title=\"User list\" secondary={<SecondaryAction link=\"https://next.material-ui.com/system/typography/\" />}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={50}\r\n                // rowsPerPageOptions={[40]}\r\n                checkboxSelection\r\n                disableSelectionOnClick\r\n                getRowId={(row) => row.user_id}\r\n                sx={{ width: '100%', height: 500 }}\r\n                // onPageChange={(page) => alert(page)}\r\n            />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Typography;\r\n"]},"metadata":{},"sourceType":"module"}